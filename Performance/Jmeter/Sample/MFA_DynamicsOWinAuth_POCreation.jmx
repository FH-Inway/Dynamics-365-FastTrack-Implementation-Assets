<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.2">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">false</boolProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="host" elementType="Argument">
            <stringProp name="Argument.name">host</stringProp>
            <stringProp name="Argument.value">.....</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="scheme" elementType="Argument">
            <stringProp name="Argument.name">scheme</stringProp>
            <stringProp name="Argument.value">https</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="PONumber" elementType="Argument">
            <stringProp name="Argument.name">PONumber</stringProp>
            <stringProp name="Argument.value">PONumber_NOTFOUND</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="retried" elementType="Argument">
            <stringProp name="Argument.name">retried</stringProp>
            <stringProp name="Argument.value">0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="tenant" elementType="Argument">
            <stringProp name="Argument.value">......</stringProp>
            <stringProp name="Argument.name">tenant</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="PurchQty_item2" elementType="Argument">
            <stringProp name="Argument.name">PurchQty_item2</stringProp>
            <stringProp name="Argument.value">7.00</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="PurchQty_item1" elementType="Argument">
            <stringProp name="Argument.name">PurchQty_item1</stringProp>
            <stringProp name="Argument.value">5.00</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="PurchLine_ItemId" elementType="Argument">
            <stringProp name="Argument.name">PurchLine_ItemId</stringProp>
            <stringProp name="Argument.value">A0002</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">${host}</stringProp>
        <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
      </ConfigTestElement>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config - Agent Login" enabled="true">
        <stringProp name="delimiter">,</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="filename">Login_cookie.csv</stringProp>
        <boolProp name="ignoreFirstLine">false</boolProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="variableNames">aos,csrftoken,owinauth</stringProp>
      </CSVDataSet>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies">
          <elementProp name="ms-dyn-affinity" elementType="Cookie" testname="ms-dyn-affinity">
            <stringProp name="Cookie.value">${aos}</stringProp>
            <stringProp name="Cookie.domain">.${host}</stringProp>
            <stringProp name="Cookie.path">/</stringProp>
            <boolProp name="Cookie.secure">true</boolProp>
            <longProp name="Cookie.expires">0</longProp>
            <boolProp name="Cookie.path_specified">true</boolProp>
            <boolProp name="Cookie.domain_specified">true</boolProp>
          </elementProp>
          <elementProp name="ms-dyn-csrftoken" elementType="Cookie" testname="ms-dyn-csrftoken">
            <stringProp name="Cookie.value">${csrftoken}</stringProp>
            <stringProp name="Cookie.domain">${host}</stringProp>
            <stringProp name="Cookie.path">/</stringProp>
            <boolProp name="Cookie.secure">true</boolProp>
            <longProp name="Cookie.expires">0</longProp>
            <boolProp name="Cookie.path_specified">true</boolProp>
            <boolProp name="Cookie.domain_specified">true</boolProp>
          </elementProp>
          <elementProp name="DynamicsOwinAuth" elementType="Cookie" testname="DynamicsOwinAuth">
            <stringProp name="Cookie.value">${owinauth}</stringProp>
            <stringProp name="Cookie.domain">.${host}</stringProp>
            <stringProp name="Cookie.path">/</stringProp>
            <boolProp name="Cookie.secure">true</boolProp>
            <longProp name="Cookie.expires">0</longProp>
            <boolProp name="Cookie.path_specified">true</boolProp>
            <boolProp name="Cookie.domain_specified">true</boolProp>
          </elementProp>
        </collectionProp>
        <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">15</stringProp>
        <longProp name="ThreadGroup.start_time">1370726934000</longProp>
        <longProp name="ThreadGroup.end_time">1370726934000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay">15</stringProp>
        <boolProp name="ThreadGroup.delayedStart">false</boolProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <RecordingController guiclass="RecordController" testclass="RecordingController" testname="Recording Controller" enabled="true"/>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="1. Login" enabled="false">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LogIn/-10" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">none</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - state1" enabled="true">
                <stringProp name="RegexExtractor.refname">state1</stringProp>
                <stringProp name="RegexExtractor.regex">&amp;state=([^&amp;]+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">state1_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - nonce" enabled="true">
                <stringProp name="RegexExtractor.refname">nonce</stringProp>
                <stringProp name="RegexExtractor.regex">nonce=([A-Za-z0-9-.]+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">nonce_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LogIn/${tenant}/oauth2/authorize-12" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="client_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_id</stringProp>
                    <stringProp name="Argument.value">00000015-0000-0000-c000-000000000000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="response_mode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_mode</stringProp>
                    <stringProp name="Argument.value">form_post</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="response_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">response_type</stringProp>
                    <stringProp name="Argument.value">code id_token</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="scope" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">scope</stringProp>
                    <stringProp name="Argument.value">openid profile</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="state" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">state</stringProp>
                    <stringProp name="Argument.value">${__urldecode(${state1})}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="nonce" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">nonce</stringProp>
                    <stringProp name="Argument.value">${nonce}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://${host}/</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="max_age" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">max_age</stringProp>
                    <stringProp name="Argument.value">86400</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/${tenant}/oauth2/authorize</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">none</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Hpgid" enabled="true">
                <stringProp name="RegexExtractor.refname">Hpgid</stringProp>
                <stringProp name="RegexExtractor.regex">,&quot;hpgid&quot;:(.+?),&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Hpgid_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Hpgact" enabled="true">
                <stringProp name="RegexExtractor.refname">Hpgact</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;hpgact&quot;:(.+?),&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Hpgact_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Client-request-id" enabled="true">
                <stringProp name="RegexExtractor.refname">Client-request-id</stringProp>
                <stringProp name="RegexExtractor.regex">client-request-id=(.+?)&quot;,</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Client-request-id_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Hpgrequestid" enabled="true">
                <stringProp name="RegexExtractor.refname">Hpgrequestid</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;sessionId&quot;:&quot;(.+?)&quot;,</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Hpgrequestid_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - ApiCanary" enabled="true">
                <stringProp name="RegexExtractor.refname">ApiCanary</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;apiCanary&quot;:&quot;(.+?)&quot;,</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">ApiCanary_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Canary" enabled="true">
                <stringProp name="RegexExtractor.refname">Canary</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;canary&quot;:&quot;(.+?)&quot;},</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Canary_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Ctx" enabled="true">
                <stringProp name="RegexExtractor.refname">Ctx</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;sCtx&quot;:&quot;(.+?)&quot;,</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Ctx_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - SFT" enabled="true">
                <stringProp name="RegexExtractor.refname">SFT</stringProp>
                <stringProp name="RegexExtractor.regex">,&quot;sFT&quot;:&quot;(.+?)&quot;,&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">SFT_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Boundary Extractor - Canary2" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">Canary2</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">&quot;canary&quot;:&quot;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&quot;</stringProp>
                <stringProp name="BoundaryExtractor.default">Canary2_NOT_FOUND</stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              </BoundaryExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LogIn/common/GetCredentialType?mkt=en-US-26" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;username&quot;:&quot;${userEmail}&quot;,&quot;isOtherIdpSupported&quot;:true,&quot;checkPhones&quot;:false,&quot;isRemoteNGCSupported&quot;:true,&quot;isCookieBannerShown&quot;:false,&quot;isFidoSupported&quot;:true,&quot;originalRequest&quot;:&quot;${Ctx}&quot;,&quot;country&quot;:&quot;KR&quot;,&quot;forceotclogin&quot;:false,&quot;isExternalFederationDisallowed&quot;:false,&quot;isRemoteConnectSupported&quot;:false,&quot;federationFlags&quot;:0,&quot;isSignup&quot;:false,&quot;flowToken&quot;:&quot;${SFT}&quot;,&quot;isAccessPassSupported&quot;:true}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/common/GetCredentialType?mkt=en-US</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/${tenant}/oauth2/authorize?client_id=00000015-0000-0000-c000-000000000000&amp;response_mode=form_post&amp;response_type=code+id_token&amp;scope=openid+profile&amp;state=${__urldecode(${state1})}(${state1})}(${state1})}(${state1})}</stringProp>
                  </elementProp>
                  <elementProp name="hpgact" elementType="Header">
                    <stringProp name="Header.name">hpgact</stringProp>
                    <stringProp name="Header.value">${Hpgact}</stringProp>
                  </elementProp>
                  <elementProp name="canary" elementType="Header">
                    <stringProp name="Header.name">canary</stringProp>
                    <stringProp name="Header.value">${ApiCanary}</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com</stringProp>
                  </elementProp>
                  <elementProp name="hpgrequestid" elementType="Header">
                    <stringProp name="Header.name">hpgrequestid</stringProp>
                    <stringProp name="Header.value">${Hpgrequestid}</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="hpgid" elementType="Header">
                    <stringProp name="Header.name">hpgid</stringProp>
                    <stringProp name="Header.value">${Hpgid}</stringProp>
                  </elementProp>
                  <elementProp name="client-request-id" elementType="Header">
                    <stringProp name="Header.name">client-request-id</stringProp>
                    <stringProp name="Header.value">${Client-request-id}</stringProp>
                  </elementProp>
                  <elementProp name="Content-type" elementType="Header">
                    <stringProp name="Header.name">Content-type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - SFT1" enabled="true">
                <stringProp name="RegexExtractor.refname">SFT1</stringProp>
                <stringProp name="RegexExtractor.regex">,&quot;FlowToken&quot;:&quot;(.+?)&quot;,</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">SFT1_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LogIn/${tenant}/login-30" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="i13" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i13</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="login" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">login</stringProp>
                    <stringProp name="Argument.value">${userEmail}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="loginfmt" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">loginfmt</stringProp>
                    <stringProp name="Argument.value">${userEmail}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                    <stringProp name="Argument.value">11</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="LoginOptions" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">LoginOptions</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="lrt" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">lrt</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="lrtPartition" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">lrtPartition</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="hisRegion" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">hisRegion</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="hisScaleUnit" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">hisScaleUnit</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="passwd" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">passwd</stringProp>
                    <stringProp name="Argument.value">${userPassword}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ps" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ps</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="psRNGCDefaultType" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">psRNGCDefaultType</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="psRNGCEntropy" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">psRNGCEntropy</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="psRNGCSLK" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">psRNGCSLK</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="canary" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">canary</stringProp>
                    <stringProp name="Argument.value">${Canary}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ctx" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ctx</stringProp>
                    <stringProp name="Argument.value">${Ctx}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="hpgrequestid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">hpgrequestid</stringProp>
                    <stringProp name="Argument.value">${Hpgrequestid}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="flowToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">flowToken</stringProp>
                    <stringProp name="Argument.value">${SFT1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="PPSX" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">PPSX</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="NewUser" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">NewUser</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="FoundMSAs" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">FoundMSAs</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="fspost" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">fspost</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i21" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i21</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="CookieDisclosure" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">CookieDisclosure</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="IsFidoSupported" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">IsFidoSupported</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="isSignupPost" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">isSignupPost</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i19" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i19</stringProp>
                    <stringProp name="Argument.value">8861</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/${tenant}/login</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/${tenant}/oauth2/authorize?client_id=00000015-0000-0000-c000-000000000000&amp;response_mode=form_post&amp;response_type=code+id_token&amp;scope=openid+profile&amp;state=${__urldecode(${state1})}(${state1})}(${state1})}(${state1})}</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Hpgid" enabled="true">
                <stringProp name="RegexExtractor.refname">Hpgid</stringProp>
                <stringProp name="RegexExtractor.regex">,&quot;hpgid&quot;:(.+?),&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Hpgid_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Hpgact" enabled="true">
                <stringProp name="RegexExtractor.refname">Hpgact</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;hpgact&quot;:(.+?),&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Hpgact_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Hpgrequestid" enabled="true">
                <stringProp name="RegexExtractor.refname">Hpgrequestid</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;sessionId&quot;:&quot;(.+?)&quot;,</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Hpgrequestid_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - ApiCanary" enabled="true">
                <stringProp name="RegexExtractor.refname">ApiCanary</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;apiCanary&quot;:&quot;(.+?)&quot;,</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">ApiCanary_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Canary" enabled="true">
                <stringProp name="RegexExtractor.refname">Canary</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;canary&quot;:&quot;(.+?)&quot;},</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Canary_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Ctx" enabled="true">
                <stringProp name="RegexExtractor.refname">Ctx</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;sCtx&quot;:&quot;(.+?)&quot;,</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Ctx_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - SFT" enabled="true">
                <stringProp name="RegexExtractor.refname">SFT</stringProp>
                <stringProp name="RegexExtractor.regex">,&quot;sFT&quot;:&quot;(.+?)&quot;,&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">SFT_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Boundary Extractor - Canary2" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">Canary2</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">&quot;canary&quot;:&quot;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&quot;</stringProp>
                <stringProp name="BoundaryExtractor.default">Canary2_NOT_FOUND</stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              </BoundaryExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LogIn/kmsi-35" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="LoginOptions" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">LoginOptions</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                    <stringProp name="Argument.value">28</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ctx" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ctx</stringProp>
                    <stringProp name="Argument.value">${Ctx}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="hpgrequestid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">hpgrequestid</stringProp>
                    <stringProp name="Argument.value">${Hpgrequestid}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="flowToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">flowToken</stringProp>
                    <stringProp name="Argument.value">${SFT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="canary" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">canary</stringProp>
                    <stringProp name="Argument.value">${Canary}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i19" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i19</stringProp>
                    <stringProp name="Argument.value">2106</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/kmsi</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/${tenant}/login</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - code" enabled="true">
                <stringProp name="RegexExtractor.refname">code</stringProp>
                <stringProp name="RegexExtractor.regex">name=&quot;code&quot; value=&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">code_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Idtoken" enabled="true">
                <stringProp name="RegexExtractor.refname">Idtoken</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;id_token&quot; value=&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Idtoken_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - SessionState" enabled="true">
                <stringProp name="RegexExtractor.refname">SessionState</stringProp>
                <stringProp name="RegexExtractor.regex">name=&quot;session_state&quot; value=&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">SessionState_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LogIn/-36" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="code" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">code</stringProp>
                    <stringProp name="Argument.value">${code}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="id_token" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">id_token</stringProp>
                    <stringProp name="Argument.value">${Idtoken}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="state" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">state</stringProp>
                    <stringProp name="Argument.value">${__urldecode(${state1})}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="session_state" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">session_state</stringProp>
                    <stringProp name="Argument.value">${SessionState}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LogIn/-38" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="2. Go To PO list page" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LogIn/Services/ReliableCommunicationManager.svc/ProcessMessages?-61" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;&quot;,&quot;Language&quot;:&quot;&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:0,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;GetFormInteraction&quot;,&quot;ObjectName&quot;:&quot;sysloadstartpage&quot;,&quot;OpenMethod&quot;:2,&quot;ShouldBlockOnExecution&quot;:true,&quot;TargetId&quot;:&quot;1&quot;,&quot;CallbackId&quot;:&quot;1&quot;}],&quot;SequenceNumber&quot;:1}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">c3174f3e-32d3-4e5a-b19a-2e2c3ebd10e0</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">23d213f8-6c6b-430e-a79d-63160165491e</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">4bMdRnIC6j4DMjw9za6EIg%3D%3D.bOH%2FvpH%2FpPE%2FPtFlHTnMM2jnrJJo%2FWLMY2ytKB%2F7YTuB9Z9JtuZHLe56B5oZ0ne5BuAtVnhFZimi2PlPimctIIEt83tQnBzIiGRenTX%2BeCMW05LpsQWgqk8yxnUvGqWzBpFWf9PwxYrVSTXhfl9j1BSSNM9pZwCGgsrU5HjJCACixZXvPeRXEgaUmVqKvhyuB9WSZ5E1nw6mu3Us1xpPYYoCmAVoc1EOnOEkxZ9aR4oJkA72Ubk76jXtPNmi5iO4TlJNdwFwEL8lsQ8xUBC1pkIrqQzVR8EuJX%2BflgZbUyvRquY49yC8EQxaGnGo58%2B6tWv97XCs4RmzvcbEwVC4VQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#19" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#19</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#19_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#20" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#20</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#20_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression ExtractorDefaultDashboard_form3_0" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">DefaultDashboard_form3_0</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;DefaultDashboard_form&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor__TimerForAsyncTaskPolling6_0" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">__TimerForAsyncTaskPolling6_0</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;__TimerForAsyncTaskPolling&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LogIn/resources/html/Calendar.htm-63" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/resources/html/Calendar.htm</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LogIn/resources/html/TimerControl.htm-64" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/resources/html/TimerControl.htm</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LogIn/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-65" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:1,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;CommandName&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;ShouldBlockOnExecution&quot;:false,&quot;TargetId&quot;:&quot;GetMenuPaneSettings&quot;,&quot;CallbackId&quot;:&quot;2&quot;}],&quot;SequenceNumber&quot;:2},{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;CommandName&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;ShouldBlockOnExecution&quot;:false,&quot;TargetId&quot;:&quot;RetrieveNavigationPaneTopLevelSitemapMenu&quot;,&quot;CallbackId&quot;:&quot;3&quot;}],&quot;SequenceNumber&quot;:3},{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;CommandName&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;ShouldBlockOnExecution&quot;:false,&quot;TargetId&quot;:&quot;RetrieveFavoriteMenuItems&quot;,&quot;CallbackId&quot;:&quot;4&quot;}],&quot;SequenceNumber&quot;:4},{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;CommandName&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;ShouldBlockOnExecution&quot;:false,&quot;TargetId&quot;:&quot;RetrieveRecentlyUsedMenuItems&quot;,&quot;CallbackId&quot;:&quot;5&quot;}],&quot;SequenceNumber&quot;:5},{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;CommandName&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;ShouldBlockOnExecution&quot;:false,&quot;TargetId&quot;:&quot;RetrieveNavigationPaneTopLevelSitemapMenu&quot;,&quot;CallbackId&quot;:&quot;6&quot;}],&quot;SequenceNumber&quot;:6},{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;CommandName&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;ShouldBlockOnExecution&quot;:false,&quot;TargetId&quot;:&quot;RetrieveNavigationPaneMenu&quot;,&quot;CallbackId&quot;:&quot;7&quot;}],&quot;SequenceNumber&quot;:7},{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;CommandName&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;ShouldBlockOnExecution&quot;:false,&quot;TargetId&quot;:&quot;RetrieveRecentlyUsedMenuItems&quot;,&quot;CallbackId&quot;:&quot;8&quot;}],&quot;SequenceNumber&quot;:8}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">18a7cb51-cfd9-4fed-bf2e-f32a3dd541de</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">23d213f8-6c6b-430e-a79d-63160165491e</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#19}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">4bMdRnIC6j4DMjw9za6EIg%3D%3D.bOH%2FvpH%2FpPE%2FPtFlHTnMM2jnrJJo%2FWLMY2ytKB%2F7YTuB9Z9JtuZHLe56B5oZ0ne5BuAtVnhFZimi2PlPimctIIEt83tQnBzIiGRenTX%2BeCMW05LpsQWgqk8yxnUvGqWzBpFWf9PwxYrVSTXhfl9j1BSSNM9pZwCGgsrU5HjJCACixZXvPeRXEgaUmVqKvhyuB9WSZ5E1nw6mu3Us1xpPYYoCmAVoc1EOnOEkxZ9aR4oJkA72Ubk76jXtPNmi5iO4TlJNdwFwEL8lsQ8xUBC1pkIrqQzVR8EuJX%2BflgZbUyvRquY49yC8EQxaGnGo58%2B6tWv97XCs4RmzvcbEwVC4VQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#27" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#27</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#27_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#28" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#28</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#28_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LogIn/conf/v2/d365fo/fpconfig.min.json-67" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="monitorId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">monitorId</stringProp>
                    <stringProp name="Argument.value">d365fo</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">fpc.msedge.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/conf/v2/d365fo/fpconfig.min.json</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LogIn/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-70" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:2,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;CommandName&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;ShouldBlockOnExecution&quot;:false,&quot;TargetId&quot;:&quot;RetrieveFavoriteMenuItems&quot;,&quot;CallbackId&quot;:&quot;9&quot;}],&quot;SequenceNumber&quot;:9}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">e8e93e9a-807a-4356-aaca-5eca05bebbd3</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">23d213f8-6c6b-430e-a79d-63160165491e</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#19}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">4bMdRnIC6j4DMjw9za6EIg%3D%3D.bOH%2FvpH%2FpPE%2FPtFlHTnMM2jnrJJo%2FWLMY2ytKB%2F7YTuB9Z9JtuZHLe56B5oZ0ne5BuAtVnhFZimi2PlPimctIIEt83tQnBzIiGRenTX%2BeCMW05LpsQWgqk8yxnUvGqWzBpFWf9PwxYrVSTXhfl9j1BSSNM9pZwCGgsrU5HjJCACixZXvPeRXEgaUmVqKvhyuB9WSZ5E1nw6mu3Us1xpPYYoCmAVoc1EOnOEkxZ9aR4oJkA72Ubk76jXtPNmi5iO4TlJNdwFwEL8lsQ8xUBC1pkIrqQzVR8EuJX%2BflgZbUyvRquY49yC8EQxaGnGo58%2B6tWv97XCs4RmzvcbEwVC4VQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#31" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#31</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#31_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#32" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#32</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#32_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LogIn/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-72" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:3,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;CommandName&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;ShouldBlockOnExecution&quot;:false,&quot;TargetId&quot;:&quot;RetrieveFavoriteMenuItems&quot;,&quot;CallbackId&quot;:&quot;9&quot;}],&quot;SequenceNumber&quot;:10},{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;CommandName&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;ShouldBlockOnExecution&quot;:false,&quot;TargetId&quot;:&quot;RetrieveSitemapMenu&quot;,&quot;NamedParameters&quot;:{&quot;Args1&quot;:&quot;SysMenuSettings&quot;},&quot;CallbackId&quot;:&quot;11&quot;}],&quot;SequenceNumber&quot;:11},{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;CommandName&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;ShouldBlockOnExecution&quot;:false,&quot;TargetId&quot;:&quot;RetrieveSitemapMenu&quot;,&quot;NamedParameters&quot;:{&quot;Args1&quot;:&quot;SysMenuHelp&quot;},&quot;CallbackId&quot;:&quot;12&quot;}],&quot;SequenceNumber&quot;:12}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">4c7eb628-16b3-454c-849c-179c8a8fe816</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">23d213f8-6c6b-430e-a79d-63160165491e</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#19}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">4bMdRnIC6j4DMjw9za6EIg%3D%3D.bOH%2FvpH%2FpPE%2FPtFlHTnMM2jnrJJo%2FWLMY2ytKB%2F7YTuB9Z9JtuZHLe56B5oZ0ne5BuAtVnhFZimi2PlPimctIIEt83tQnBzIiGRenTX%2BeCMW05LpsQWgqk8yxnUvGqWzBpFWf9PwxYrVSTXhfl9j1BSSNM9pZwCGgsrU5HjJCACixZXvPeRXEgaUmVqKvhyuB9WSZ5E1nw6mu3Us1xpPYYoCmAVoc1EOnOEkxZ9aR4oJkA72Ubk76jXtPNmi5iO4TlJNdwFwEL8lsQ8xUBC1pkIrqQzVR8EuJX%2BflgZbUyvRquY49yC8EQxaGnGo58%2B6tWv97XCs4RmzvcbEwVC4VQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#33" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#33</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#33_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#34" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#34</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#34_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LogIn/Services/TelemetryManager.svc/ProcessEventData-73" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;EventDataInteraction&quot;,&quot;EventData&quot;:[{&quot;$type&quot;:&quot;SessionActionEventData&quot;,&quot;SessionAction&quot;:0,&quot;UserAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0&quot;,&quot;BrowserName&quot;:&quot;Firefox&quot;,&quot;BrowserVersion&quot;:&quot;120.0&quot;,&quot;OperatingSystem&quot;:&quot;Windows 10&quot;,&quot;CpuClass&quot;:&quot;amd64&quot;,&quot;BrowserLanguage&quot;:&quot;en-US&quot;,&quot;OSLanguage&quot;:&quot;&quot;,&quot;ApplicationLanguage&quot;:&quot;en-us&quot;,&quot;Locale&quot;:&quot;en-US&quot;,&quot;Density&quot;:&quot;30&quot;,&quot;Theme&quot;:&quot;0&quot;,&quot;ClientVersion&quot;:&quot;7.0.23307.2&quot;,&quot;Device&quot;:&quot;&quot;,&quot;TouchEnabled&quot;:true,&quot;ScreenResolution&quot;:&quot;2560x1400&quot;,&quot;ViewPortSize&quot;:&quot;1280x787&quot;,&quot;EventGroupId&quot;:1,&quot;EventTimestamp&quot;:1700842245288},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:4,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;GetFormInteraction HtmlImport HtmlImport GetMenuStructureInteraction GetMenuStructureInteraction GetMenuStructureInteraction GetMenuStructureInteraction GetMenuStructureInteraction GetMenuStructureInteraction GetMenuStructureInteraction ClientInternetRestrictedInteraction GetMenuStructureInteraction GetMenuStructureInteraction GetMenuStructureInteraction&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:378,&quot;EventGroupId&quot;:1,&quot;EventTimestamp&quot;:1700842247174},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:5,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;GetFormInteraction HtmlImport HtmlImport GetMenuStructureInteraction GetMenuStructureInteraction GetMenuStructureInteraction GetMenuStructureInteraction GetMenuStructureInteraction GetMenuStructureInteraction GetMenuStructureInteraction ClientInternetRestrictedInteraction GetMenuStructureInteraction GetMenuStructureInteraction GetMenuStructureInteraction&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:3510,&quot;EventGroupId&quot;:1,&quot;EventTimestamp&quot;:1700842247174},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:6,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;GetFormInteraction HtmlImport HtmlImport GetMenuStructureInteraction GetMenuStructureInteraction GetMenuStructureInteraction GetMenuStructureInteraction GetMenuStructureInteraction GetMenuStructureInteraction GetMenuStructureInteraction ClientInternetRestrictedInteraction GetMenuStructureInteraction GetMenuStructureInteraction GetMenuStructureInteraction&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:88,&quot;EventGroupId&quot;:1,&quot;EventTimestamp&quot;:1700842247174},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:7,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;GetFormInteraction&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:1644,&quot;EventGroupId&quot;:1,&quot;EventTimestamp&quot;:1700842247174}]}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/TelemetryManager.svc/ProcessEventData</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=DefaultDashboard</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">c3174f3e-32d3-4e5a-b19a-2e2c3ebd10e0</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">23d213f8-6c6b-430e-a79d-63160165491e</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#19}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">4bMdRnIC6j4DMjw9za6EIg%3D%3D.bOH%2FvpH%2FpPE%2FPtFlHTnMM2jnrJJo%2FWLMY2ytKB%2F7YTuB9Z9JtuZHLe56B5oZ0ne5BuAtVnhFZimi2PlPimctIIEt83tQnBzIiGRenTX%2BeCMW05LpsQWgqk8yxnUvGqWzBpFWf9PwxYrVSTXhfl9j1BSSNM9pZwCGgsrU5HjJCACixZXvPeRXEgaUmVqKvhyuB9WSZ5E1nw6mu3Us1xpPYYoCmAVoc1EOnOEkxZ9aR4oJkA72Ubk76jXtPNmi5iO4TlJNdwFwEL8lsQ8xUBC1pkIrqQzVR8EuJX%2BflgZbUyvRquY49yC8EQxaGnGo58%2B6tWv97XCs4RmzvcbEwVC4VQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LogIn/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-74" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:4,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;13&quot;,&quot;CommandName&quot;:&quot;Elapsed&quot;,&quot;FailureCallbackId&quot;:&quot;&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${DefaultDashboard_form3_0}&quot;,&quot;TargetId&quot;:&quot;${__TimerForAsyncTaskPolling6_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;0&quot;,&quot;ThrottleTimestamp&quot;:0,&quot;ThrottleValue&quot;:0,&quot;Telemetry&quot;:false}],&quot;SequenceNumber&quot;:13}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=DefaultDashboard</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">f3afeb19-ad4c-49bc-b6f3-a1e09915c192</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">23d213f8-6c6b-430e-a79d-63160165491e</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#19}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">4bMdRnIC6j4DMjw9za6EIg%3D%3D.bOH%2FvpH%2FpPE%2FPtFlHTnMM2jnrJJo%2FWLMY2ytKB%2F7YTuB9Z9JtuZHLe56B5oZ0ne5BuAtVnhFZimi2PlPimctIIEt83tQnBzIiGRenTX%2BeCMW05LpsQWgqk8yxnUvGqWzBpFWf9PwxYrVSTXhfl9j1BSSNM9pZwCGgsrU5HjJCACixZXvPeRXEgaUmVqKvhyuB9WSZ5E1nw6mu3Us1xpPYYoCmAVoc1EOnOEkxZ9aR4oJkA72Ubk76jXtPNmi5iO4TlJNdwFwEL8lsQ8xUBC1pkIrqQzVR8EuJX%2BflgZbUyvRquY49yC8EQxaGnGo58%2B6tWv97XCs4RmzvcbEwVC4VQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#37" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#37</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#37_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#38" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#38</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#38_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GoToPOListPage/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-85" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:5,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;CommandName&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;ShouldBlockOnExecution&quot;:false,&quot;TargetId&quot;:&quot;RetrieveSitemapMenu&quot;,&quot;NamedParameters&quot;:{&quot;Args1&quot;:&quot;ProcurementAndSourcing&quot;},&quot;CallbackId&quot;:&quot;14&quot;}],&quot;SequenceNumber&quot;:14}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=DefaultDashboard</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">6e543a86-0566-4673-b977-47a867940d98</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">23d213f8-6c6b-430e-a79d-63160165491e</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#19}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">4bMdRnIC6j4DMjw9za6EIg%3D%3D.bOH%2FvpH%2FpPE%2FPtFlHTnMM2jnrJJo%2FWLMY2ytKB%2F7YTuB9Z9JtuZHLe56B5oZ0ne5BuAtVnhFZimi2PlPimctIIEt83tQnBzIiGRenTX%2BeCMW05LpsQWgqk8yxnUvGqWzBpFWf9PwxYrVSTXhfl9j1BSSNM9pZwCGgsrU5HjJCACixZXvPeRXEgaUmVqKvhyuB9WSZ5E1nw6mu3Us1xpPYYoCmAVoc1EOnOEkxZ9aR4oJkA72Ubk76jXtPNmi5iO4TlJNdwFwEL8lsQ8xUBC1pkIrqQzVR8EuJX%2BflgZbUyvRquY49yC8EQxaGnGo58%2B6tWv97XCs4RmzvcbEwVC4VQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#39" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#39</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#39_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#40" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#40</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#40_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GoToPOListPage/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-86" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:6,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;GetFormInteraction&quot;,&quot;NavigationPath&quot;:[&quot;mainmenu&quot;,&quot;ProcurementAndSourcing&quot;,&quot;PurchaseOrders&quot;],&quot;ObjectName&quot;:&quot;purchtablelistpage&quot;,&quot;OpenMethod&quot;:0,&quot;ShouldBlockOnExecution&quot;:true,&quot;TargetId&quot;:&quot;3&quot;,&quot;CallbackId&quot;:&quot;15&quot;}],&quot;SequenceNumber&quot;:15}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=DefaultDashboard</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">ef4fc157-4ce8-4300-824f-df5de028bbe2</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">23d213f8-6c6b-430e-a79d-63160165491e</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#19}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">4bMdRnIC6j4DMjw9za6EIg%3D%3D.bOH%2FvpH%2FpPE%2FPtFlHTnMM2jnrJJo%2FWLMY2ytKB%2F7YTuB9Z9JtuZHLe56B5oZ0ne5BuAtVnhFZimi2PlPimctIIEt83tQnBzIiGRenTX%2BeCMW05LpsQWgqk8yxnUvGqWzBpFWf9PwxYrVSTXhfl9j1BSSNM9pZwCGgsrU5HjJCACixZXvPeRXEgaUmVqKvhyuB9WSZ5E1nw6mu3Us1xpPYYoCmAVoc1EOnOEkxZ9aR4oJkA72Ubk76jXtPNmi5iO4TlJNdwFwEL8lsQ8xUBC1pkIrqQzVR8EuJX%2BflgZbUyvRquY49yC8EQxaGnGo58%2B6tWv97XCs4RmzvcbEwVC4VQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#41" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#41</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#41_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#42" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#42</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#42_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression ExtractorPurchTable_form22_0" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">PurchTable_form22_0</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;PurchTable_form&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression ExtractorPurchTable_OrderAccountAdv510_0" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">PurchTable_OrderAccountAdv510_0</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;PurchTable_OrderAccountAdv&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression ExtractorSystemDefinedNewButton420_0" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">SystemDefinedNewButton420_0</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;SystemDefinedNewButton&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression ExtractorPurchOrder422_0" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">PurchOrder422_0</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;PurchOrder&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression ExtractorLineSpec472_0" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">LineSpec472_0</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;LineSpec&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression ExtractorPurchLine_ItemId479_0" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">PurchLine_ItemId479_0</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;PurchLine_ItemId&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression ExtractorInventoryDimensionsGrid_InventSiteId484_0" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">InventoryDimensionsGrid_InventSiteId484_0</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;InventoryDimensionsGrid_InventSiteId&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression ExtractorInventoryDimensionsGrid_InventLocationId485_0" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">InventoryDimensionsGrid_InventLocationId485_0</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;InventoryDimensionsGrid_InventLocationId&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression ExtractorPurchLine_PurchQtyGrid488_0" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">PurchLine_PurchQtyGrid488_0</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;PurchLine_PurchQtyGrid&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression ExtractorLineStripNew462_0" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">LineStripNew462_0</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;LineStripNew&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression ExtractorPurchTableWorkflowDropDialog438_0" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">PurchTableWorkflowDropDialog438_0</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;PurchTableWorkflowDropDialog&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GoToPOListPage/Services/TelemetryManager.svc/ProcessEventData-90" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;EventDataInteraction&quot;,&quot;EventData&quot;:[{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:4,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;GetFormInteraction&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:5,&quot;EventGroupId&quot;:2,&quot;EventTimestamp&quot;:1700842280710},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:5,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;GetFormInteraction&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:3527,&quot;EventGroupId&quot;:2,&quot;EventTimestamp&quot;:1700842280710},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:6,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;GetFormInteraction&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:835,&quot;EventGroupId&quot;:2,&quot;EventTimestamp&quot;:1700842280710},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:7,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;GetFormInteraction&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:4012,&quot;EventGroupId&quot;:2,&quot;EventTimestamp&quot;:1700842280710}]}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/TelemetryManager.svc/ProcessEventData</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=PurchTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">ef4fc157-4ce8-4300-824f-df5de028bbe2</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">23d213f8-6c6b-430e-a79d-63160165491e</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#19}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">4bMdRnIC6j4DMjw9za6EIg%3D%3D.bOH%2FvpH%2FpPE%2FPtFlHTnMM2jnrJJo%2FWLMY2ytKB%2F7YTuB9Z9JtuZHLe56B5oZ0ne5BuAtVnhFZimi2PlPimctIIEt83tQnBzIiGRenTX%2BeCMW05LpsQWgqk8yxnUvGqWzBpFWf9PwxYrVSTXhfl9j1BSSNM9pZwCGgsrU5HjJCACixZXvPeRXEgaUmVqKvhyuB9WSZ5E1nw6mu3Us1xpPYYoCmAVoc1EOnOEkxZ9aR4oJkA72Ubk76jXtPNmi5iO4TlJNdwFwEL8lsQ8xUBC1pkIrqQzVR8EuJX%2BflgZbUyvRquY49yC8EQxaGnGo58%2B6tWv97XCs4RmzvcbEwVC4VQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GoToPOListPage/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-91" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:7,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;CommandName&quot;:&quot;GetMenuStructureInteraction&quot;,&quot;ShouldBlockOnExecution&quot;:false,&quot;TargetId&quot;:&quot;ReportMenuItemUsage&quot;,&quot;NamedParameters&quot;:{&quot;Args1&quot;:&quot;PurchTableListPage#Display#[\&quot;mainmenu\&quot;,\&quot;ProcurementAndSourcing\&quot;,\&quot;PurchaseOrders\&quot;,\&quot;PurchTableListPage\&quot;]#Procurement and sourcing,Purchase orders,All purchase orders&quot;},&quot;CallbackId&quot;:&quot;16&quot;}],&quot;SequenceNumber&quot;:16}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=PurchTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">97bfc57a-f2e6-4d54-8fcf-e84858637cfe</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">23d213f8-6c6b-430e-a79d-63160165491e</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#19}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">4bMdRnIC6j4DMjw9za6EIg%3D%3D.bOH%2FvpH%2FpPE%2FPtFlHTnMM2jnrJJo%2FWLMY2ytKB%2F7YTuB9Z9JtuZHLe56B5oZ0ne5BuAtVnhFZimi2PlPimctIIEt83tQnBzIiGRenTX%2BeCMW05LpsQWgqk8yxnUvGqWzBpFWf9PwxYrVSTXhfl9j1BSSNM9pZwCGgsrU5HjJCACixZXvPeRXEgaUmVqKvhyuB9WSZ5E1nw6mu3Us1xpPYYoCmAVoc1EOnOEkxZ9aR4oJkA72Ubk76jXtPNmi5iO4TlJNdwFwEL8lsQ8xUBC1pkIrqQzVR8EuJX%2BflgZbUyvRquY49yC8EQxaGnGo58%2B6tWv97XCs4RmzvcbEwVC4VQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#45" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#45</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#45_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#46" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#46</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#46_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GoToPOListPage/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-92" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:8,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;&quot;,&quot;CommandName&quot;:&quot;RequestEnhancedPreview&quot;,&quot;FailureCallbackId&quot;:&quot;&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[&quot;4&quot;,&quot;132&quot;,true],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${PurchTable_form22_0}&quot;,&quot;TargetId&quot;:&quot;${PurchTable_OrderAccountAdv510_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;0&quot;,&quot;ThrottleTimestamp&quot;:0,&quot;ThrottleValue&quot;:0,&quot;Telemetry&quot;:true}],&quot;SequenceNumber&quot;:17}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=PurchTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">2accbd78-f730-493c-8acf-b5a8929d8281</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">23d213f8-6c6b-430e-a79d-63160165491e</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#19}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">4bMdRnIC6j4DMjw9za6EIg%3D%3D.bOH%2FvpH%2FpPE%2FPtFlHTnMM2jnrJJo%2FWLMY2ytKB%2F7YTuB9Z9JtuZHLe56B5oZ0ne5BuAtVnhFZimi2PlPimctIIEt83tQnBzIiGRenTX%2BeCMW05LpsQWgqk8yxnUvGqWzBpFWf9PwxYrVSTXhfl9j1BSSNM9pZwCGgsrU5HjJCACixZXvPeRXEgaUmVqKvhyuB9WSZ5E1nw6mu3Us1xpPYYoCmAVoc1EOnOEkxZ9aR4oJkA72Ubk76jXtPNmi5iO4TlJNdwFwEL8lsQ8xUBC1pkIrqQzVR8EuJX%2BflgZbUyvRquY49yC8EQxaGnGo58%2B6tWv97XCs4RmzvcbEwVC4VQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#47" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#47</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#47_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#48" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#48</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#48_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression ExtractorVendTable_AutoEnhancedPreview_4_form527_0" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">VendTable_AutoEnhancedPreview_4_form527_0</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;VendTable_AutoEnhancedPreview_4_form&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GoToPOListPage/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-93" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:9,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;17&quot;,&quot;CommandName&quot;:&quot;RequestClose&quot;,&quot;FailureCallbackId&quot;:&quot;&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[false],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${VendTable_AutoEnhancedPreview_4_form527_0}&quot;,&quot;TargetId&quot;:&quot;${VendTable_AutoEnhancedPreview_4_form527_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;0&quot;,&quot;ThrottleTimestamp&quot;:0,&quot;ThrottleValue&quot;:0,&quot;Telemetry&quot;:true}],&quot;SequenceNumber&quot;:18}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=PurchTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">4b3176b4-e73e-40ef-82a4-326153c7fa67</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">23d213f8-6c6b-430e-a79d-63160165491e</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#19}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">4bMdRnIC6j4DMjw9za6EIg%3D%3D.bOH%2FvpH%2FpPE%2FPtFlHTnMM2jnrJJo%2FWLMY2ytKB%2F7YTuB9Z9JtuZHLe56B5oZ0ne5BuAtVnhFZimi2PlPimctIIEt83tQnBzIiGRenTX%2BeCMW05LpsQWgqk8yxnUvGqWzBpFWf9PwxYrVSTXhfl9j1BSSNM9pZwCGgsrU5HjJCACixZXvPeRXEgaUmVqKvhyuB9WSZ5E1nw6mu3Us1xpPYYoCmAVoc1EOnOEkxZ9aR4oJkA72Ubk76jXtPNmi5iO4TlJNdwFwEL8lsQ8xUBC1pkIrqQzVR8EuJX%2BflgZbUyvRquY49yC8EQxaGnGo58%2B6tWv97XCs4RmzvcbEwVC4VQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#49" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#49</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#49_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#50" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#50</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#50_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="3. Create PO" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CreatePO/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-95" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:10,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;&quot;,&quot;CommandName&quot;:&quot;UpdateLastSelectedControl&quot;,&quot;FailureCallbackId&quot;:&quot;&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:true,&quot;PositionalParameters&quot;:[&quot;GridFilter&quot;],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${PurchTable_form22_0}&quot;,&quot;TargetId&quot;:&quot;${PurchTable_form22_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;0&quot;,&quot;ThrottleTimestamp&quot;:0,&quot;ThrottleValue&quot;:0,&quot;Telemetry&quot;:false},{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;&quot;,&quot;CommandName&quot;:&quot;Click&quot;,&quot;FailureCallbackId&quot;:&quot;&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:null,&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${PurchTable_form22_0}&quot;,&quot;ShouldBlockOnExecution&quot;:true,&quot;TargetId&quot;:&quot;${SystemDefinedNewButton420_0}&quot;,&quot;Throttle&quot;:true,&quot;ThrottleId&quot;:&quot;${PurchTable_form22_0}_TG&quot;,&quot;ThrottleTimestamp&quot;:0,&quot;ThrottleValue&quot;:0,&quot;Telemetry&quot;:true}],&quot;SequenceNumber&quot;:19}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=PurchTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">d7cbe8f7-91da-4e04-a9b7-4456a3d2a7a0</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">23d213f8-6c6b-430e-a79d-63160165491e</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#19}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">4bMdRnIC6j4DMjw9za6EIg%3D%3D.bOH%2FvpH%2FpPE%2FPtFlHTnMM2jnrJJo%2FWLMY2ytKB%2F7YTuB9Z9JtuZHLe56B5oZ0ne5BuAtVnhFZimi2PlPimctIIEt83tQnBzIiGRenTX%2BeCMW05LpsQWgqk8yxnUvGqWzBpFWf9PwxYrVSTXhfl9j1BSSNM9pZwCGgsrU5HjJCACixZXvPeRXEgaUmVqKvhyuB9WSZ5E1nw6mu3Us1xpPYYoCmAVoc1EOnOEkxZ9aR4oJkA72Ubk76jXtPNmi5iO4TlJNdwFwEL8lsQ8xUBC1pkIrqQzVR8EuJX%2BflgZbUyvRquY49yC8EQxaGnGo58%2B6tWv97XCs4RmzvcbEwVC4VQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#51" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#51</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#51_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#52" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#52</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#52_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression ExtractorPurchCreateOrder_form542_0" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">PurchCreateOrder_form542_0</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;PurchCreateOrder_form&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression ExtractorPurchTable_OrderAccount1501_0" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">PurchTable_OrderAccount1501_0</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;PurchTable_OrderAccount&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression ExtractorOK1520_0" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">OK1520_0</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;OK&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression ExtractorSystemDefinedSaveButton1490_0" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">SystemDefinedSaveButton1490_0</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;SystemDefinedSaveButton&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CreatePO/Services/TelemetryManager.svc/ProcessEventData-96" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;EventDataInteraction&quot;,&quot;EventData&quot;:[{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:4,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;UpdateLastSelectedControl Click&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:17,&quot;EventGroupId&quot;:3,&quot;EventTimestamp&quot;:1700842302289},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:5,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;UpdateLastSelectedControl Click&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:1924,&quot;EventGroupId&quot;:3,&quot;EventTimestamp&quot;:1700842302289},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:6,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;UpdateLastSelectedControl Click&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:957,&quot;EventGroupId&quot;:3,&quot;EventTimestamp&quot;:1700842302289},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:7,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;Click&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:2311,&quot;EventGroupId&quot;:3,&quot;EventTimestamp&quot;:1700842302289}]}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/TelemetryManager.svc/ProcessEventData</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=PurchTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">d7cbe8f7-91da-4e04-a9b7-4456a3d2a7a0</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">23d213f8-6c6b-430e-a79d-63160165491e</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#19}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">4bMdRnIC6j4DMjw9za6EIg%3D%3D.bOH%2FvpH%2FpPE%2FPtFlHTnMM2jnrJJo%2FWLMY2ytKB%2F7YTuB9Z9JtuZHLe56B5oZ0ne5BuAtVnhFZimi2PlPimctIIEt83tQnBzIiGRenTX%2BeCMW05LpsQWgqk8yxnUvGqWzBpFWf9PwxYrVSTXhfl9j1BSSNM9pZwCGgsrU5HjJCACixZXvPeRXEgaUmVqKvhyuB9WSZ5E1nw6mu3Us1xpPYYoCmAVoc1EOnOEkxZ9aR4oJkA72Ubk76jXtPNmi5iO4TlJNdwFwEL8lsQ8xUBC1pkIrqQzVR8EuJX%2BflgZbUyvRquY49yC8EQxaGnGo58%2B6tWv97XCs4RmzvcbEwVC4VQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CreatePO/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-97" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:11,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;18&quot;,&quot;CommandName&quot;:&quot;RequestPopup&quot;,&quot;FailureCallbackId&quot;:&quot;19&quot;,&quot;NamedParameters&quot;:{&quot;Arg1&quot;:&quot;6&quot;},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[&quot;6&quot;,{&quot;PurchTable_OrderAccount&quot;:&quot;1001&quot;,&quot;__selectionStart&quot;:&quot;4&quot;,&quot;__selectionEnd&quot;:&quot;4&quot;}],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${PurchCreateOrder_form542_0}&quot;,&quot;TargetId&quot;:&quot;${PurchTable_OrderAccount1501_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;0&quot;,&quot;ThrottleTimestamp&quot;:0,&quot;ThrottleValue&quot;:0,&quot;Telemetry&quot;:true}],&quot;SequenceNumber&quot;:20}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=PurchTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">6c49dfc0-64e1-4108-87d0-c3007ae166e4</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">23d213f8-6c6b-430e-a79d-63160165491e</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#19}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">4bMdRnIC6j4DMjw9za6EIg%3D%3D.bOH%2FvpH%2FpPE%2FPtFlHTnMM2jnrJJo%2FWLMY2ytKB%2F7YTuB9Z9JtuZHLe56B5oZ0ne5BuAtVnhFZimi2PlPimctIIEt83tQnBzIiGRenTX%2BeCMW05LpsQWgqk8yxnUvGqWzBpFWf9PwxYrVSTXhfl9j1BSSNM9pZwCGgsrU5HjJCACixZXvPeRXEgaUmVqKvhyuB9WSZ5E1nw6mu3Us1xpPYYoCmAVoc1EOnOEkxZ9aR4oJkA72Ubk76jXtPNmi5iO4TlJNdwFwEL8lsQ8xUBC1pkIrqQzVR8EuJX%2BflgZbUyvRquY49yC8EQxaGnGo58%2B6tWv97XCs4RmzvcbEwVC4VQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#55" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#55</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#55_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#56" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#56</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#56_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression ExtractorVendTableLookup_form1592_0" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">VendTableLookup_form1592_0</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;VendTableLookup_form&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CreatePO/Services/TelemetryManager.svc/ProcessEventData-98" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;EventDataInteraction&quot;,&quot;EventData&quot;:[{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:4,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;RequestPopup&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:1236,&quot;EventGroupId&quot;:4,&quot;EventTimestamp&quot;:1700842308003},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:5,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;RequestPopup&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:765,&quot;EventGroupId&quot;:4,&quot;EventTimestamp&quot;:1700842308003},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:6,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;RequestPopup&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:239,&quot;EventGroupId&quot;:4,&quot;EventTimestamp&quot;:1700842308003},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:7,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;BlockingDiv&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:0,&quot;EventGroupId&quot;:4,&quot;EventTimestamp&quot;:1700842308003}]}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/TelemetryManager.svc/ProcessEventData</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=PurchTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">6c49dfc0-64e1-4108-87d0-c3007ae166e4</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">23d213f8-6c6b-430e-a79d-63160165491e</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#19}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">4bMdRnIC6j4DMjw9za6EIg%3D%3D.bOH%2FvpH%2FpPE%2FPtFlHTnMM2jnrJJo%2FWLMY2ytKB%2F7YTuB9Z9JtuZHLe56B5oZ0ne5BuAtVnhFZimi2PlPimctIIEt83tQnBzIiGRenTX%2BeCMW05LpsQWgqk8yxnUvGqWzBpFWf9PwxYrVSTXhfl9j1BSSNM9pZwCGgsrU5HjJCACixZXvPeRXEgaUmVqKvhyuB9WSZ5E1nw6mu3Us1xpPYYoCmAVoc1EOnOEkxZ9aR4oJkA72Ubk76jXtPNmi5iO4TlJNdwFwEL8lsQ8xUBC1pkIrqQzVR8EuJX%2BflgZbUyvRquY49yC8EQxaGnGo58%2B6tWv97XCs4RmzvcbEwVC4VQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CreatePO/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-99" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:12,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;20&quot;,&quot;CommandName&quot;:&quot;SetValue&quot;,&quot;complete&quot;:null,&quot;FailureCallbackId&quot;:&quot;21&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[&quot;1001&quot;],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${PurchCreateOrder_form542_0}&quot;,&quot;TargetId&quot;:&quot;${PurchTable_OrderAccount1501_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;0&quot;,&quot;ThrottleTimestamp&quot;:0,&quot;ThrottleValue&quot;:0,&quot;Telemetry&quot;:true}],&quot;SequenceNumber&quot;:21}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=PurchTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">7e9b66c0-92f0-450e-8d8d-72b745b3322e</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">23d213f8-6c6b-430e-a79d-63160165491e</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#19}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">4bMdRnIC6j4DMjw9za6EIg%3D%3D.bOH%2FvpH%2FpPE%2FPtFlHTnMM2jnrJJo%2FWLMY2ytKB%2F7YTuB9Z9JtuZHLe56B5oZ0ne5BuAtVnhFZimi2PlPimctIIEt83tQnBzIiGRenTX%2BeCMW05LpsQWgqk8yxnUvGqWzBpFWf9PwxYrVSTXhfl9j1BSSNM9pZwCGgsrU5HjJCACixZXvPeRXEgaUmVqKvhyuB9WSZ5E1nw6mu3Us1xpPYYoCmAVoc1EOnOEkxZ9aR4oJkA72Ubk76jXtPNmi5iO4TlJNdwFwEL8lsQ8xUBC1pkIrqQzVR8EuJX%2BflgZbUyvRquY49yC8EQxaGnGo58%2B6tWv97XCs4RmzvcbEwVC4VQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#59" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#59</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#59_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#60" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#60</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#60_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CreatePO/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-100" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:13,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;22&quot;,&quot;CommandName&quot;:&quot;RequestClose&quot;,&quot;FailureCallbackId&quot;:&quot;&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[true],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${VendTableLookup_form1592_0}&quot;,&quot;TargetId&quot;:&quot;${VendTableLookup_form1592_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;0&quot;,&quot;ThrottleTimestamp&quot;:0,&quot;ThrottleValue&quot;:0,&quot;Telemetry&quot;:true}],&quot;SequenceNumber&quot;:22}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=PurchTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">1c1b7717-2d23-41ee-8903-f45a4558b64e</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">23d213f8-6c6b-430e-a79d-63160165491e</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#19}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">4bMdRnIC6j4DMjw9za6EIg%3D%3D.bOH%2FvpH%2FpPE%2FPtFlHTnMM2jnrJJo%2FWLMY2ytKB%2F7YTuB9Z9JtuZHLe56B5oZ0ne5BuAtVnhFZimi2PlPimctIIEt83tQnBzIiGRenTX%2BeCMW05LpsQWgqk8yxnUvGqWzBpFWf9PwxYrVSTXhfl9j1BSSNM9pZwCGgsrU5HjJCACixZXvPeRXEgaUmVqKvhyuB9WSZ5E1nw6mu3Us1xpPYYoCmAVoc1EOnOEkxZ9aR4oJkA72Ubk76jXtPNmi5iO4TlJNdwFwEL8lsQ8xUBC1pkIrqQzVR8EuJX%2BflgZbUyvRquY49yC8EQxaGnGo58%2B6tWv97XCs4RmzvcbEwVC4VQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#61" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#61</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#61_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#62" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#62</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#62_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CreatePO/Services/TelemetryManager.svc/ProcessEventData-101" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;EventDataInteraction&quot;,&quot;EventData&quot;:[{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:4,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;SetValue RequestClose&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:41,&quot;EventGroupId&quot;:5,&quot;EventTimestamp&quot;:1700842311405},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:5,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;SetValue RequestClose&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:1536,&quot;EventGroupId&quot;:5,&quot;EventTimestamp&quot;:1700842311405},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:6,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;SetValue RequestClose&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:9,&quot;EventGroupId&quot;:5,&quot;EventTimestamp&quot;:1700842311405},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:7,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;BlockingDiv&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:0,&quot;EventGroupId&quot;:5,&quot;EventTimestamp&quot;:1700842311405}]}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/TelemetryManager.svc/ProcessEventData</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=PurchTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">7e9b66c0-92f0-450e-8d8d-72b745b3322e</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">23d213f8-6c6b-430e-a79d-63160165491e</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#19}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">4bMdRnIC6j4DMjw9za6EIg%3D%3D.bOH%2FvpH%2FpPE%2FPtFlHTnMM2jnrJJo%2FWLMY2ytKB%2F7YTuB9Z9JtuZHLe56B5oZ0ne5BuAtVnhFZimi2PlPimctIIEt83tQnBzIiGRenTX%2BeCMW05LpsQWgqk8yxnUvGqWzBpFWf9PwxYrVSTXhfl9j1BSSNM9pZwCGgsrU5HjJCACixZXvPeRXEgaUmVqKvhyuB9WSZ5E1nw6mu3Us1xpPYYoCmAVoc1EOnOEkxZ9aR4oJkA72Ubk76jXtPNmi5iO4TlJNdwFwEL8lsQ8xUBC1pkIrqQzVR8EuJX%2BflgZbUyvRquY49yC8EQxaGnGo58%2B6tWv97XCs4RmzvcbEwVC4VQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CreatePO/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-102" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:14,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;&quot;,&quot;CommandName&quot;:&quot;Click&quot;,&quot;FailureCallbackId&quot;:&quot;&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:null,&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${PurchCreateOrder_form542_0}&quot;,&quot;ShouldBlockOnExecution&quot;:true,&quot;TargetId&quot;:&quot;${OK1520_0}&quot;,&quot;Throttle&quot;:true,&quot;ThrottleId&quot;:&quot;${PurchCreateOrder_form542_0}_TG&quot;,&quot;ThrottleTimestamp&quot;:0,&quot;ThrottleValue&quot;:0,&quot;Telemetry&quot;:true}],&quot;SequenceNumber&quot;:23}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=PurchTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">c48eaf6a-5d00-447b-a8ef-f2ef54322d36</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">23d213f8-6c6b-430e-a79d-63160165491e</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#19}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">4bMdRnIC6j4DMjw9za6EIg%3D%3D.bOH%2FvpH%2FpPE%2FPtFlHTnMM2jnrJJo%2FWLMY2ytKB%2F7YTuB9Z9JtuZHLe56B5oZ0ne5BuAtVnhFZimi2PlPimctIIEt83tQnBzIiGRenTX%2BeCMW05LpsQWgqk8yxnUvGqWzBpFWf9PwxYrVSTXhfl9j1BSSNM9pZwCGgsrU5HjJCACixZXvPeRXEgaUmVqKvhyuB9WSZ5E1nw6mu3Us1xpPYYoCmAVoc1EOnOEkxZ9aR4oJkA72Ubk76jXtPNmi5iO4TlJNdwFwEL8lsQ8xUBC1pkIrqQzVR8EuJX%2BflgZbUyvRquY49yC8EQxaGnGo58%2B6tWv97XCs4RmzvcbEwVC4VQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#65" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#65</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#65_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#66" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#66</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#66_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression ExtractorGrid1661_0" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">Grid1661_0</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;Grid&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CreatePO/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-103" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:15,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;&quot;,&quot;CommandName&quot;:&quot;TabShown&quot;,&quot;FailureCallbackId&quot;:&quot;&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:null,&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${PurchTable_form22_0}&quot;,&quot;TargetId&quot;:&quot;${PurchOrder422_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;0&quot;,&quot;ThrottleTimestamp&quot;:0,&quot;ThrottleValue&quot;:0,&quot;Telemetry&quot;:true}],&quot;SequenceNumber&quot;:24}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=PurchTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">e9a0ce1f-0b5b-46b3-81d5-4f2e5d6fd27b</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">23d213f8-6c6b-430e-a79d-63160165491e</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#19}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">4bMdRnIC6j4DMjw9za6EIg%3D%3D.bOH%2FvpH%2FpPE%2FPtFlHTnMM2jnrJJo%2FWLMY2ytKB%2F7YTuB9Z9JtuZHLe56B5oZ0ne5BuAtVnhFZimi2PlPimctIIEt83tQnBzIiGRenTX%2BeCMW05LpsQWgqk8yxnUvGqWzBpFWf9PwxYrVSTXhfl9j1BSSNM9pZwCGgsrU5HjJCACixZXvPeRXEgaUmVqKvhyuB9WSZ5E1nw6mu3Us1xpPYYoCmAVoc1EOnOEkxZ9aR4oJkA72Ubk76jXtPNmi5iO4TlJNdwFwEL8lsQ8xUBC1pkIrqQzVR8EuJX%2BflgZbUyvRquY49yC8EQxaGnGo58%2B6tWv97XCs4RmzvcbEwVC4VQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#67" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#67</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#67_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#68" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#68</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#68_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CreatePO/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-104" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:16,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;&quot;,&quot;CommandName&quot;:&quot;Refresh&quot;,&quot;FailureCallbackId&quot;:&quot;&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:null,&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${PurchTable_form22_0}&quot;,&quot;TargetId&quot;:&quot;${Grid1661_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;0&quot;,&quot;ThrottleTimestamp&quot;:0,&quot;ThrottleValue&quot;:0,&quot;Telemetry&quot;:false}],&quot;SequenceNumber&quot;:25}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=PurchTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">2574e8d1-45d9-41e8-82f2-cd0c9e2d4add</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">23d213f8-6c6b-430e-a79d-63160165491e</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#19}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">4bMdRnIC6j4DMjw9za6EIg%3D%3D.bOH%2FvpH%2FpPE%2FPtFlHTnMM2jnrJJo%2FWLMY2ytKB%2F7YTuB9Z9JtuZHLe56B5oZ0ne5BuAtVnhFZimi2PlPimctIIEt83tQnBzIiGRenTX%2BeCMW05LpsQWgqk8yxnUvGqWzBpFWf9PwxYrVSTXhfl9j1BSSNM9pZwCGgsrU5HjJCACixZXvPeRXEgaUmVqKvhyuB9WSZ5E1nw6mu3Us1xpPYYoCmAVoc1EOnOEkxZ9aR4oJkA72Ubk76jXtPNmi5iO4TlJNdwFwEL8lsQ8xUBC1pkIrqQzVR8EuJX%2BflgZbUyvRquY49yC8EQxaGnGo58%2B6tWv97XCs4RmzvcbEwVC4VQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#69" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#69</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#69_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#70" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#70</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#70_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CreatePO/Services/TelemetryManager.svc/ProcessEventData-105" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;EventDataInteraction&quot;,&quot;EventData&quot;:[{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:4,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;Click TabShown Refresh&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:1198,&quot;EventGroupId&quot;:6,&quot;EventTimestamp&quot;:1700842321617},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:5,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;Click TabShown Refresh&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:3433,&quot;EventGroupId&quot;:6,&quot;EventTimestamp&quot;:1700842321617},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:6,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;Click TabShown Refresh&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:2,&quot;EventGroupId&quot;:6,&quot;EventTimestamp&quot;:1700842321617},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:7,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;Click&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:3150,&quot;EventGroupId&quot;:6,&quot;EventTimestamp&quot;:1700842321617}]}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/TelemetryManager.svc/ProcessEventData</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=PurchTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">c48eaf6a-5d00-447b-a8ef-f2ef54322d36</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">23d213f8-6c6b-430e-a79d-63160165491e</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#19}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">4bMdRnIC6j4DMjw9za6EIg%3D%3D.bOH%2FvpH%2FpPE%2FPtFlHTnMM2jnrJJo%2FWLMY2ytKB%2F7YTuB9Z9JtuZHLe56B5oZ0ne5BuAtVnhFZimi2PlPimctIIEt83tQnBzIiGRenTX%2BeCMW05LpsQWgqk8yxnUvGqWzBpFWf9PwxYrVSTXhfl9j1BSSNM9pZwCGgsrU5HjJCACixZXvPeRXEgaUmVqKvhyuB9WSZ5E1nw6mu3Us1xpPYYoCmAVoc1EOnOEkxZ9aR4oJkA72Ubk76jXtPNmi5iO4TlJNdwFwEL8lsQ8xUBC1pkIrqQzVR8EuJX%2BflgZbUyvRquY49yC8EQxaGnGo58%2B6tWv97XCs4RmzvcbEwVC4VQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="4. Add first line detail" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AddFistLineDetail/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-106" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:16,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;&quot;,&quot;CommandName&quot;:&quot;ToggleMark&quot;,&quot;FailureCallbackId&quot;:&quot;&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:null,&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${PurchTable_form22_0}&quot;,&quot;TargetId&quot;:&quot;${LineSpec472_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;0&quot;,&quot;ThrottleTimestamp&quot;:0,&quot;ThrottleValue&quot;:0,&quot;Telemetry&quot;:false}],&quot;SequenceNumber&quot;:26}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=PurchTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">3741240f-2942-4e46-92d9-b0338d157cc4</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">23d213f8-6c6b-430e-a79d-63160165491e</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#19}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">4bMdRnIC6j4DMjw9za6EIg%3D%3D.bOH%2FvpH%2FpPE%2FPtFlHTnMM2jnrJJo%2FWLMY2ytKB%2F7YTuB9Z9JtuZHLe56B5oZ0ne5BuAtVnhFZimi2PlPimctIIEt83tQnBzIiGRenTX%2BeCMW05LpsQWgqk8yxnUvGqWzBpFWf9PwxYrVSTXhfl9j1BSSNM9pZwCGgsrU5HjJCACixZXvPeRXEgaUmVqKvhyuB9WSZ5E1nw6mu3Us1xpPYYoCmAVoc1EOnOEkxZ9aR4oJkA72Ubk76jXtPNmi5iO4TlJNdwFwEL8lsQ8xUBC1pkIrqQzVR8EuJX%2BflgZbUyvRquY49yC8EQxaGnGo58%2B6tWv97XCs4RmzvcbEwVC4VQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#73" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#73</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#73_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#74" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#74</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#74_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AddFistLineDetail/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-107" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:17,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;23&quot;,&quot;CommandName&quot;:&quot;RequestPopup&quot;,&quot;FailureCallbackId&quot;:&quot;24&quot;,&quot;NamedParameters&quot;:{&quot;Arg1&quot;:&quot;7&quot;},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[&quot;7&quot;,{&quot;PurchLine_ItemId&quot;:&quot;1000&quot;}],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${PurchTable_form22_0}&quot;,&quot;TargetId&quot;:&quot;${PurchLine_ItemId479_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;0&quot;,&quot;ThrottleTimestamp&quot;:0,&quot;ThrottleValue&quot;:0,&quot;Telemetry&quot;:true}],&quot;SequenceNumber&quot;:27}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=PurchTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">813a674e-3fb9-4d13-ac0d-121683fe62f2</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">23d213f8-6c6b-430e-a79d-63160165491e</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#19}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">4bMdRnIC6j4DMjw9za6EIg%3D%3D.bOH%2FvpH%2FpPE%2FPtFlHTnMM2jnrJJo%2FWLMY2ytKB%2F7YTuB9Z9JtuZHLe56B5oZ0ne5BuAtVnhFZimi2PlPimctIIEt83tQnBzIiGRenTX%2BeCMW05LpsQWgqk8yxnUvGqWzBpFWf9PwxYrVSTXhfl9j1BSSNM9pZwCGgsrU5HjJCACixZXvPeRXEgaUmVqKvhyuB9WSZ5E1nw6mu3Us1xpPYYoCmAVoc1EOnOEkxZ9aR4oJkA72Ubk76jXtPNmi5iO4TlJNdwFwEL8lsQ8xUBC1pkIrqQzVR8EuJX%2BflgZbUyvRquY49yC8EQxaGnGo58%2B6tWv97XCs4RmzvcbEwVC4VQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#75" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#75</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#75_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#76" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#76</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#76_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression ExtractorInventItemIdLookupPurchase_form1837_0" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">InventItemIdLookupPurchase_form1837_0</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;InventItemIdLookupPurchase_form&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AddFistLineDetail/Services/TelemetryManager.svc/ProcessEventData-108" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;EventDataInteraction&quot;,&quot;EventData&quot;:[{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:4,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;RequestPopup&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:1329,&quot;EventGroupId&quot;:7,&quot;EventTimestamp&quot;:1700842342069},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:5,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;RequestPopup&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:724,&quot;EventGroupId&quot;:7,&quot;EventTimestamp&quot;:1700842342069},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:6,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;RequestPopup&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:87,&quot;EventGroupId&quot;:7,&quot;EventTimestamp&quot;:1700842342069},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:7,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;BlockingDiv&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:0,&quot;EventGroupId&quot;:7,&quot;EventTimestamp&quot;:1700842342069}]}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/TelemetryManager.svc/ProcessEventData</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=PurchTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">813a674e-3fb9-4d13-ac0d-121683fe62f2</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">23d213f8-6c6b-430e-a79d-63160165491e</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#19}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">4bMdRnIC6j4DMjw9za6EIg%3D%3D.bOH%2FvpH%2FpPE%2FPtFlHTnMM2jnrJJo%2FWLMY2ytKB%2F7YTuB9Z9JtuZHLe56B5oZ0ne5BuAtVnhFZimi2PlPimctIIEt83tQnBzIiGRenTX%2BeCMW05LpsQWgqk8yxnUvGqWzBpFWf9PwxYrVSTXhfl9j1BSSNM9pZwCGgsrU5HjJCACixZXvPeRXEgaUmVqKvhyuB9WSZ5E1nw6mu3Us1xpPYYoCmAVoc1EOnOEkxZ9aR4oJkA72Ubk76jXtPNmi5iO4TlJNdwFwEL8lsQ8xUBC1pkIrqQzVR8EuJX%2BflgZbUyvRquY49yC8EQxaGnGo58%2B6tWv97XCs4RmzvcbEwVC4VQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AddFistLineDetail/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-109" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:18,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;25&quot;,&quot;CommandName&quot;:&quot;RequestClose&quot;,&quot;FailureCallbackId&quot;:&quot;&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[true],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${InventItemIdLookupPurchase_form1837_0}&quot;,&quot;TargetId&quot;:&quot;${InventItemIdLookupPurchase_form1837_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;0&quot;,&quot;ThrottleTimestamp&quot;:0,&quot;ThrottleValue&quot;:0,&quot;Telemetry&quot;:true}],&quot;SequenceNumber&quot;:28},{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;26&quot;,&quot;CommandName&quot;:&quot;SetValue&quot;,&quot;complete&quot;:null,&quot;FailureCallbackId&quot;:&quot;27&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[&quot;1000&quot;],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${PurchTable_form22_0}&quot;,&quot;TargetId&quot;:&quot;${PurchLine_ItemId479_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;0&quot;,&quot;ThrottleTimestamp&quot;:0,&quot;ThrottleValue&quot;:0,&quot;Telemetry&quot;:true}],&quot;SequenceNumber&quot;:29}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=PurchTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">41091fa0-4fa9-44bd-9a65-d07a64d996bb</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">23d213f8-6c6b-430e-a79d-63160165491e</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#19}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">4bMdRnIC6j4DMjw9za6EIg%3D%3D.bOH%2FvpH%2FpPE%2FPtFlHTnMM2jnrJJo%2FWLMY2ytKB%2F7YTuB9Z9JtuZHLe56B5oZ0ne5BuAtVnhFZimi2PlPimctIIEt83tQnBzIiGRenTX%2BeCMW05LpsQWgqk8yxnUvGqWzBpFWf9PwxYrVSTXhfl9j1BSSNM9pZwCGgsrU5HjJCACixZXvPeRXEgaUmVqKvhyuB9WSZ5E1nw6mu3Us1xpPYYoCmAVoc1EOnOEkxZ9aR4oJkA72Ubk76jXtPNmi5iO4TlJNdwFwEL8lsQ8xUBC1pkIrqQzVR8EuJX%2BflgZbUyvRquY49yC8EQxaGnGo58%2B6tWv97XCs4RmzvcbEwVC4VQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#79" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#79</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#79_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#80" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#80</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#80_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AddFistLineDetail/Services/TelemetryManager.svc/ProcessEventData-110" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;EventDataInteraction&quot;,&quot;EventData&quot;:[{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:4,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;RequestClose SetValue&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:87,&quot;EventGroupId&quot;:8,&quot;EventTimestamp&quot;:1700842345349},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:5,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;RequestClose SetValue&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:767,&quot;EventGroupId&quot;:8,&quot;EventTimestamp&quot;:1700842345350},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:6,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;RequestClose SetValue&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:151,&quot;EventGroupId&quot;:8,&quot;EventTimestamp&quot;:1700842345350},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:7,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;BlockingDiv&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:0,&quot;EventGroupId&quot;:8,&quot;EventTimestamp&quot;:1700842345350}]}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/TelemetryManager.svc/ProcessEventData</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=PurchTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">41091fa0-4fa9-44bd-9a65-d07a64d996bb</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">23d213f8-6c6b-430e-a79d-63160165491e</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#19}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">4bMdRnIC6j4DMjw9za6EIg%3D%3D.bOH%2FvpH%2FpPE%2FPtFlHTnMM2jnrJJo%2FWLMY2ytKB%2F7YTuB9Z9JtuZHLe56B5oZ0ne5BuAtVnhFZimi2PlPimctIIEt83tQnBzIiGRenTX%2BeCMW05LpsQWgqk8yxnUvGqWzBpFWf9PwxYrVSTXhfl9j1BSSNM9pZwCGgsrU5HjJCACixZXvPeRXEgaUmVqKvhyuB9WSZ5E1nw6mu3Us1xpPYYoCmAVoc1EOnOEkxZ9aR4oJkA72Ubk76jXtPNmi5iO4TlJNdwFwEL8lsQ8xUBC1pkIrqQzVR8EuJX%2BflgZbUyvRquY49yC8EQxaGnGo58%2B6tWv97XCs4RmzvcbEwVC4VQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AddFistLineDetail/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-111" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:19,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;28&quot;,&quot;CommandName&quot;:&quot;RequestPopup&quot;,&quot;FailureCallbackId&quot;:&quot;29&quot;,&quot;NamedParameters&quot;:{&quot;Arg1&quot;:&quot;8&quot;},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[&quot;8&quot;,{&quot;InventoryDimensionsGrid_InventSiteId&quot;:&quot;1&quot;}],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${PurchTable_form22_0}&quot;,&quot;TargetId&quot;:&quot;${InventoryDimensionsGrid_InventSiteId484_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;0&quot;,&quot;ThrottleTimestamp&quot;:0,&quot;ThrottleValue&quot;:0,&quot;Telemetry&quot;:true}],&quot;SequenceNumber&quot;:30}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=PurchTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">450b2161-75e2-4613-8787-7d4434670742</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">23d213f8-6c6b-430e-a79d-63160165491e</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#19}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">4bMdRnIC6j4DMjw9za6EIg%3D%3D.bOH%2FvpH%2FpPE%2FPtFlHTnMM2jnrJJo%2FWLMY2ytKB%2F7YTuB9Z9JtuZHLe56B5oZ0ne5BuAtVnhFZimi2PlPimctIIEt83tQnBzIiGRenTX%2BeCMW05LpsQWgqk8yxnUvGqWzBpFWf9PwxYrVSTXhfl9j1BSSNM9pZwCGgsrU5HjJCACixZXvPeRXEgaUmVqKvhyuB9WSZ5E1nw6mu3Us1xpPYYoCmAVoc1EOnOEkxZ9aR4oJkA72Ubk76jXtPNmi5iO4TlJNdwFwEL8lsQ8xUBC1pkIrqQzVR8EuJX%2BflgZbUyvRquY49yC8EQxaGnGo58%2B6tWv97XCs4RmzvcbEwVC4VQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#83" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#83</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#83_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#84" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#84</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#84_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor_form1855_0" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">_form1855_0</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;_form&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AddFistLineDetail/Services/TelemetryManager.svc/ProcessEventData-112" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;EventDataInteraction&quot;,&quot;EventData&quot;:[{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:4,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;RequestPopup&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:471,&quot;EventGroupId&quot;:9,&quot;EventTimestamp&quot;:1700842350835},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:5,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;RequestPopup&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:640,&quot;EventGroupId&quot;:9,&quot;EventTimestamp&quot;:1700842350835},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:6,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;RequestPopup&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:140,&quot;EventGroupId&quot;:9,&quot;EventTimestamp&quot;:1700842350835},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:7,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;BlockingDiv&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:0,&quot;EventGroupId&quot;:9,&quot;EventTimestamp&quot;:1700842350835}]}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/TelemetryManager.svc/ProcessEventData</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=PurchTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">450b2161-75e2-4613-8787-7d4434670742</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">23d213f8-6c6b-430e-a79d-63160165491e</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#19}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">4bMdRnIC6j4DMjw9za6EIg%3D%3D.bOH%2FvpH%2FpPE%2FPtFlHTnMM2jnrJJo%2FWLMY2ytKB%2F7YTuB9Z9JtuZHLe56B5oZ0ne5BuAtVnhFZimi2PlPimctIIEt83tQnBzIiGRenTX%2BeCMW05LpsQWgqk8yxnUvGqWzBpFWf9PwxYrVSTXhfl9j1BSSNM9pZwCGgsrU5HjJCACixZXvPeRXEgaUmVqKvhyuB9WSZ5E1nw6mu3Us1xpPYYoCmAVoc1EOnOEkxZ9aR4oJkA72Ubk76jXtPNmi5iO4TlJNdwFwEL8lsQ8xUBC1pkIrqQzVR8EuJX%2BflgZbUyvRquY49yC8EQxaGnGo58%2B6tWv97XCs4RmzvcbEwVC4VQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AddFistLineDetail/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-113" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:20,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;30&quot;,&quot;CommandName&quot;:&quot;RequestClose&quot;,&quot;FailureCallbackId&quot;:&quot;&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[true],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${_form1855_0}&quot;,&quot;TargetId&quot;:&quot;${_form1855_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;0&quot;,&quot;ThrottleTimestamp&quot;:0,&quot;ThrottleValue&quot;:0,&quot;Telemetry&quot;:true}],&quot;SequenceNumber&quot;:31},{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;31&quot;,&quot;CommandName&quot;:&quot;SetValue&quot;,&quot;complete&quot;:null,&quot;FailureCallbackId&quot;:&quot;32&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[&quot;1&quot;],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${PurchTable_form22_0}&quot;,&quot;TargetId&quot;:&quot;${InventoryDimensionsGrid_InventSiteId484_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;0&quot;,&quot;ThrottleTimestamp&quot;:0,&quot;ThrottleValue&quot;:0,&quot;Telemetry&quot;:true}],&quot;SequenceNumber&quot;:32}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=PurchTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">2dfc76cd-6215-402b-942d-571994fd0632</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">23d213f8-6c6b-430e-a79d-63160165491e</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#19}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">4bMdRnIC6j4DMjw9za6EIg%3D%3D.bOH%2FvpH%2FpPE%2FPtFlHTnMM2jnrJJo%2FWLMY2ytKB%2F7YTuB9Z9JtuZHLe56B5oZ0ne5BuAtVnhFZimi2PlPimctIIEt83tQnBzIiGRenTX%2BeCMW05LpsQWgqk8yxnUvGqWzBpFWf9PwxYrVSTXhfl9j1BSSNM9pZwCGgsrU5HjJCACixZXvPeRXEgaUmVqKvhyuB9WSZ5E1nw6mu3Us1xpPYYoCmAVoc1EOnOEkxZ9aR4oJkA72Ubk76jXtPNmi5iO4TlJNdwFwEL8lsQ8xUBC1pkIrqQzVR8EuJX%2BflgZbUyvRquY49yC8EQxaGnGo58%2B6tWv97XCs4RmzvcbEwVC4VQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#87" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#87</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#87_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#88" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#88</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#88_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AddFistLineDetail/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-114" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:21,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;33&quot;,&quot;CommandName&quot;:&quot;RequestPopup&quot;,&quot;FailureCallbackId&quot;:&quot;34&quot;,&quot;NamedParameters&quot;:{&quot;Arg1&quot;:&quot;9&quot;},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[&quot;9&quot;,{&quot;InventoryDimensionsGrid_InventLocationId&quot;:&quot;11&quot;}],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${PurchTable_form22_0}&quot;,&quot;TargetId&quot;:&quot;${InventoryDimensionsGrid_InventLocationId485_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;0&quot;,&quot;ThrottleTimestamp&quot;:0,&quot;ThrottleValue&quot;:0,&quot;Telemetry&quot;:true}],&quot;SequenceNumber&quot;:33}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=PurchTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">4037bba9-0514-4117-a90a-3e45e0e9bbaf</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">23d213f8-6c6b-430e-a79d-63160165491e</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#19}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">4bMdRnIC6j4DMjw9za6EIg%3D%3D.bOH%2FvpH%2FpPE%2FPtFlHTnMM2jnrJJo%2FWLMY2ytKB%2F7YTuB9Z9JtuZHLe56B5oZ0ne5BuAtVnhFZimi2PlPimctIIEt83tQnBzIiGRenTX%2BeCMW05LpsQWgqk8yxnUvGqWzBpFWf9PwxYrVSTXhfl9j1BSSNM9pZwCGgsrU5HjJCACixZXvPeRXEgaUmVqKvhyuB9WSZ5E1nw6mu3Us1xpPYYoCmAVoc1EOnOEkxZ9aR4oJkA72Ubk76jXtPNmi5iO4TlJNdwFwEL8lsQ8xUBC1pkIrqQzVR8EuJX%2BflgZbUyvRquY49yC8EQxaGnGo58%2B6tWv97XCs4RmzvcbEwVC4VQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#89" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#89</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#89_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#90" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#90</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#90_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression ExtractorInventLocationIdLookup_form1869_0" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">InventLocationIdLookup_form1869_0</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;InventLocationIdLookup_form&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AddFistLineDetail/Services/TelemetryManager.svc/ProcessEventData-115" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;EventDataInteraction&quot;,&quot;EventData&quot;:[{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:4,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;RequestPopup&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:720,&quot;EventGroupId&quot;:10,&quot;EventTimestamp&quot;:1700842355438},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:5,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;RequestPopup&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:792,&quot;EventGroupId&quot;:10,&quot;EventTimestamp&quot;:1700842355438},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:6,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;RequestPopup&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:161,&quot;EventGroupId&quot;:10,&quot;EventTimestamp&quot;:1700842355438},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:7,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;BlockingDiv&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:0,&quot;EventGroupId&quot;:10,&quot;EventTimestamp&quot;:1700842355438}]}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/TelemetryManager.svc/ProcessEventData</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=PurchTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">4037bba9-0514-4117-a90a-3e45e0e9bbaf</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">23d213f8-6c6b-430e-a79d-63160165491e</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#19}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">4bMdRnIC6j4DMjw9za6EIg%3D%3D.bOH%2FvpH%2FpPE%2FPtFlHTnMM2jnrJJo%2FWLMY2ytKB%2F7YTuB9Z9JtuZHLe56B5oZ0ne5BuAtVnhFZimi2PlPimctIIEt83tQnBzIiGRenTX%2BeCMW05LpsQWgqk8yxnUvGqWzBpFWf9PwxYrVSTXhfl9j1BSSNM9pZwCGgsrU5HjJCACixZXvPeRXEgaUmVqKvhyuB9WSZ5E1nw6mu3Us1xpPYYoCmAVoc1EOnOEkxZ9aR4oJkA72Ubk76jXtPNmi5iO4TlJNdwFwEL8lsQ8xUBC1pkIrqQzVR8EuJX%2BflgZbUyvRquY49yC8EQxaGnGo58%2B6tWv97XCs4RmzvcbEwVC4VQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AddFistLineDetail/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-116" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:22,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;35&quot;,&quot;CommandName&quot;:&quot;RequestClose&quot;,&quot;FailureCallbackId&quot;:&quot;&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[true],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${InventLocationIdLookup_form1869_0}&quot;,&quot;TargetId&quot;:&quot;${InventLocationIdLookup_form1869_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;0&quot;,&quot;ThrottleTimestamp&quot;:0,&quot;ThrottleValue&quot;:0,&quot;Telemetry&quot;:true}],&quot;SequenceNumber&quot;:34},{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;36&quot;,&quot;CommandName&quot;:&quot;SetValue&quot;,&quot;complete&quot;:null,&quot;FailureCallbackId&quot;:&quot;37&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[&quot;11&quot;],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${PurchTable_form22_0}&quot;,&quot;TargetId&quot;:&quot;${InventoryDimensionsGrid_InventLocationId485_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;0&quot;,&quot;ThrottleTimestamp&quot;:0,&quot;ThrottleValue&quot;:0,&quot;Telemetry&quot;:true}],&quot;SequenceNumber&quot;:35}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=PurchTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">c1cdc8ea-a53d-4837-a739-743fa3a4b789</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">23d213f8-6c6b-430e-a79d-63160165491e</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#19}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">4bMdRnIC6j4DMjw9za6EIg%3D%3D.bOH%2FvpH%2FpPE%2FPtFlHTnMM2jnrJJo%2FWLMY2ytKB%2F7YTuB9Z9JtuZHLe56B5oZ0ne5BuAtVnhFZimi2PlPimctIIEt83tQnBzIiGRenTX%2BeCMW05LpsQWgqk8yxnUvGqWzBpFWf9PwxYrVSTXhfl9j1BSSNM9pZwCGgsrU5HjJCACixZXvPeRXEgaUmVqKvhyuB9WSZ5E1nw6mu3Us1xpPYYoCmAVoc1EOnOEkxZ9aR4oJkA72Ubk76jXtPNmi5iO4TlJNdwFwEL8lsQ8xUBC1pkIrqQzVR8EuJX%2BflgZbUyvRquY49yC8EQxaGnGo58%2B6tWv97XCs4RmzvcbEwVC4VQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#93" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#93</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#93_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#94" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#94</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#94_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AddFistLineDetail/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-117" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:23,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;38&quot;,&quot;CommandName&quot;:&quot;SetValue&quot;,&quot;complete&quot;:null,&quot;FailureCallbackId&quot;:&quot;39&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[&quot;${PurchQty_item1}&quot;],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${PurchTable_form22_0}&quot;,&quot;TargetId&quot;:&quot;${PurchLine_PurchQtyGrid488_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;0&quot;,&quot;ThrottleTimestamp&quot;:0,&quot;ThrottleValue&quot;:0,&quot;Telemetry&quot;:true}],&quot;SequenceNumber&quot;:36}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=PurchTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">79feb1e7-873e-4a65-af0e-8521f857dd07</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">23d213f8-6c6b-430e-a79d-63160165491e</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#19}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">4bMdRnIC6j4DMjw9za6EIg%3D%3D.bOH%2FvpH%2FpPE%2FPtFlHTnMM2jnrJJo%2FWLMY2ytKB%2F7YTuB9Z9JtuZHLe56B5oZ0ne5BuAtVnhFZimi2PlPimctIIEt83tQnBzIiGRenTX%2BeCMW05LpsQWgqk8yxnUvGqWzBpFWf9PwxYrVSTXhfl9j1BSSNM9pZwCGgsrU5HjJCACixZXvPeRXEgaUmVqKvhyuB9WSZ5E1nw6mu3Us1xpPYYoCmAVoc1EOnOEkxZ9aR4oJkA72Ubk76jXtPNmi5iO4TlJNdwFwEL8lsQ8xUBC1pkIrqQzVR8EuJX%2BflgZbUyvRquY49yC8EQxaGnGo58%2B6tWv97XCs4RmzvcbEwVC4VQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#95" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#95</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#95_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#96" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#96</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#96_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="5. Add new line" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AddNewLine/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-119" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:24,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;&quot;,&quot;CommandName&quot;:&quot;UpdateLastSelectedControl&quot;,&quot;FailureCallbackId&quot;:&quot;&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:true,&quot;PositionalParameters&quot;:[&quot;PurchLine_LineDiscGrid&quot;],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${PurchTable_form22_0}&quot;,&quot;TargetId&quot;:&quot;${PurchTable_form22_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;0&quot;,&quot;ThrottleTimestamp&quot;:0,&quot;ThrottleValue&quot;:0,&quot;Telemetry&quot;:false},{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;&quot;,&quot;CommandName&quot;:&quot;Click&quot;,&quot;FailureCallbackId&quot;:&quot;&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:null,&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${PurchTable_form22_0}&quot;,&quot;ShouldBlockOnExecution&quot;:true,&quot;TargetId&quot;:&quot;${LineStripNew462_0}&quot;,&quot;Throttle&quot;:true,&quot;ThrottleId&quot;:&quot;${PurchTable_form22_0}_TG&quot;,&quot;ThrottleTimestamp&quot;:0,&quot;ThrottleValue&quot;:0,&quot;Telemetry&quot;:true}],&quot;SequenceNumber&quot;:37}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=PurchTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">771c848d-d54a-4eee-a957-223942e38bf4</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">23d213f8-6c6b-430e-a79d-63160165491e</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#19}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">4bMdRnIC6j4DMjw9za6EIg%3D%3D.bOH%2FvpH%2FpPE%2FPtFlHTnMM2jnrJJo%2FWLMY2ytKB%2F7YTuB9Z9JtuZHLe56B5oZ0ne5BuAtVnhFZimi2PlPimctIIEt83tQnBzIiGRenTX%2BeCMW05LpsQWgqk8yxnUvGqWzBpFWf9PwxYrVSTXhfl9j1BSSNM9pZwCGgsrU5HjJCACixZXvPeRXEgaUmVqKvhyuB9WSZ5E1nw6mu3Us1xpPYYoCmAVoc1EOnOEkxZ9aR4oJkA72Ubk76jXtPNmi5iO4TlJNdwFwEL8lsQ8xUBC1pkIrqQzVR8EuJX%2BflgZbUyvRquY49yC8EQxaGnGo58%2B6tWv97XCs4RmzvcbEwVC4VQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#97" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#97</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#97_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#98" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#98</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#98_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AddNewLine/Services/TelemetryManager.svc/ProcessEventData-120" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;EventDataInteraction&quot;,&quot;EventData&quot;:[{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:4,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;UpdateLastSelectedControl Click&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:25,&quot;EventGroupId&quot;:11,&quot;EventTimestamp&quot;:1700842379155},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:5,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;UpdateLastSelectedControl Click&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:1430,&quot;EventGroupId&quot;:11,&quot;EventTimestamp&quot;:1700842379155},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:6,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;UpdateLastSelectedControl Click&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:324,&quot;EventGroupId&quot;:11,&quot;EventTimestamp&quot;:1700842379155},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:7,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;Click&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:1496,&quot;EventGroupId&quot;:11,&quot;EventTimestamp&quot;:1700842379155}]}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/TelemetryManager.svc/ProcessEventData</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=PurchTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">771c848d-d54a-4eee-a957-223942e38bf4</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">23d213f8-6c6b-430e-a79d-63160165491e</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#19}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">4bMdRnIC6j4DMjw9za6EIg%3D%3D.bOH%2FvpH%2FpPE%2FPtFlHTnMM2jnrJJo%2FWLMY2ytKB%2F7YTuB9Z9JtuZHLe56B5oZ0ne5BuAtVnhFZimi2PlPimctIIEt83tQnBzIiGRenTX%2BeCMW05LpsQWgqk8yxnUvGqWzBpFWf9PwxYrVSTXhfl9j1BSSNM9pZwCGgsrU5HjJCACixZXvPeRXEgaUmVqKvhyuB9WSZ5E1nw6mu3Us1xpPYYoCmAVoc1EOnOEkxZ9aR4oJkA72Ubk76jXtPNmi5iO4TlJNdwFwEL8lsQ8xUBC1pkIrqQzVR8EuJX%2BflgZbUyvRquY49yC8EQxaGnGo58%2B6tWv97XCs4RmzvcbEwVC4VQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="6. Add second line detail" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AddSecondLineDetail/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-121" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:25,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;&quot;,&quot;CommandName&quot;:&quot;ToggleMark&quot;,&quot;FailureCallbackId&quot;:&quot;&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:null,&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${PurchTable_form22_0}&quot;,&quot;TargetId&quot;:&quot;${LineSpec472_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;0&quot;,&quot;ThrottleTimestamp&quot;:0,&quot;ThrottleValue&quot;:0,&quot;Telemetry&quot;:false}],&quot;SequenceNumber&quot;:38}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=PurchTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">f97b72c1-5f62-4867-b0e8-8b412774fa76</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">23d213f8-6c6b-430e-a79d-63160165491e</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#19}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">4bMdRnIC6j4DMjw9za6EIg%3D%3D.bOH%2FvpH%2FpPE%2FPtFlHTnMM2jnrJJo%2FWLMY2ytKB%2F7YTuB9Z9JtuZHLe56B5oZ0ne5BuAtVnhFZimi2PlPimctIIEt83tQnBzIiGRenTX%2BeCMW05LpsQWgqk8yxnUvGqWzBpFWf9PwxYrVSTXhfl9j1BSSNM9pZwCGgsrU5HjJCACixZXvPeRXEgaUmVqKvhyuB9WSZ5E1nw6mu3Us1xpPYYoCmAVoc1EOnOEkxZ9aR4oJkA72Ubk76jXtPNmi5iO4TlJNdwFwEL8lsQ8xUBC1pkIrqQzVR8EuJX%2BflgZbUyvRquY49yC8EQxaGnGo58%2B6tWv97XCs4RmzvcbEwVC4VQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#101" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#101</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#101_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#102" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#102</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#102_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AddSecondLineDetail/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-122" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:26,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;40&quot;,&quot;CommandName&quot;:&quot;RequestPopup&quot;,&quot;FailureCallbackId&quot;:&quot;41&quot;,&quot;NamedParameters&quot;:{&quot;Arg1&quot;:&quot;10&quot;},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[&quot;10&quot;,{&quot;PurchLine_ItemId&quot;:&quot;A&quot;}],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${PurchTable_form22_0}&quot;,&quot;TargetId&quot;:&quot;${PurchLine_ItemId479_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;0&quot;,&quot;ThrottleTimestamp&quot;:0,&quot;ThrottleValue&quot;:0,&quot;Telemetry&quot;:true}],&quot;SequenceNumber&quot;:39}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=PurchTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">80526cfe-4fc3-446b-9915-ffeb212967b0</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">23d213f8-6c6b-430e-a79d-63160165491e</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#19}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">4bMdRnIC6j4DMjw9za6EIg%3D%3D.bOH%2FvpH%2FpPE%2FPtFlHTnMM2jnrJJo%2FWLMY2ytKB%2F7YTuB9Z9JtuZHLe56B5oZ0ne5BuAtVnhFZimi2PlPimctIIEt83tQnBzIiGRenTX%2BeCMW05LpsQWgqk8yxnUvGqWzBpFWf9PwxYrVSTXhfl9j1BSSNM9pZwCGgsrU5HjJCACixZXvPeRXEgaUmVqKvhyuB9WSZ5E1nw6mu3Us1xpPYYoCmAVoc1EOnOEkxZ9aR4oJkA72Ubk76jXtPNmi5iO4TlJNdwFwEL8lsQ8xUBC1pkIrqQzVR8EuJX%2BflgZbUyvRquY49yC8EQxaGnGo58%2B6tWv97XCs4RmzvcbEwVC4VQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#103" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#103</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#103_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#104" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#104</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#104_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression ExtractorInventItemIdLookupPurchase_form1982_0" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">InventItemIdLookupPurchase_form1982_0</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;InventItemIdLookupPurchase_form&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AddSecondLineDetail/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-123" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:27,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;&quot;,&quot;CommandName&quot;:&quot;Filter&quot;,&quot;FailureCallbackId&quot;:&quot;&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[{&quot;PurchLine_ItemId&quot;:&quot;${PurchLine_ItemId}&quot;,&quot;@activeFilter&quot;:&quot;${PurchLine_ItemId}&quot;}],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${InventItemIdLookupPurchase_form1982_0}&quot;,&quot;TargetId&quot;:&quot;${InventItemIdLookupPurchase_form1982_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;0&quot;,&quot;ThrottleTimestamp&quot;:0,&quot;ThrottleValue&quot;:0,&quot;Telemetry&quot;:false}],&quot;SequenceNumber&quot;:40}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=PurchTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">21843fbd-905b-48e4-89c6-1749c543e152</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">23d213f8-6c6b-430e-a79d-63160165491e</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#19}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">4bMdRnIC6j4DMjw9za6EIg%3D%3D.bOH%2FvpH%2FpPE%2FPtFlHTnMM2jnrJJo%2FWLMY2ytKB%2F7YTuB9Z9JtuZHLe56B5oZ0ne5BuAtVnhFZimi2PlPimctIIEt83tQnBzIiGRenTX%2BeCMW05LpsQWgqk8yxnUvGqWzBpFWf9PwxYrVSTXhfl9j1BSSNM9pZwCGgsrU5HjJCACixZXvPeRXEgaUmVqKvhyuB9WSZ5E1nw6mu3Us1xpPYYoCmAVoc1EOnOEkxZ9aR4oJkA72Ubk76jXtPNmi5iO4TlJNdwFwEL8lsQ8xUBC1pkIrqQzVR8EuJX%2BflgZbUyvRquY49yC8EQxaGnGo58%2B6tWv97XCs4RmzvcbEwVC4VQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#105" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#105</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#105_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#106" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#106</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#106_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AddSecondLineDetail/Services/TelemetryManager.svc/ProcessEventData-124" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;EventDataInteraction&quot;,&quot;EventData&quot;:[{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:4,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;RequestPopup Filter&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:1495,&quot;EventGroupId&quot;:12,&quot;EventTimestamp&quot;:1700842402293},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:5,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;RequestPopup Filter&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:1283,&quot;EventGroupId&quot;:12,&quot;EventTimestamp&quot;:1700842402293},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:6,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;RequestPopup Filter&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:23,&quot;EventGroupId&quot;:12,&quot;EventTimestamp&quot;:1700842402293},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:7,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;BlockingDiv&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:0,&quot;EventGroupId&quot;:12,&quot;EventTimestamp&quot;:1700842402293}]}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/TelemetryManager.svc/ProcessEventData</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=PurchTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">80526cfe-4fc3-446b-9915-ffeb212967b0</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">23d213f8-6c6b-430e-a79d-63160165491e</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#19}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">4bMdRnIC6j4DMjw9za6EIg%3D%3D.bOH%2FvpH%2FpPE%2FPtFlHTnMM2jnrJJo%2FWLMY2ytKB%2F7YTuB9Z9JtuZHLe56B5oZ0ne5BuAtVnhFZimi2PlPimctIIEt83tQnBzIiGRenTX%2BeCMW05LpsQWgqk8yxnUvGqWzBpFWf9PwxYrVSTXhfl9j1BSSNM9pZwCGgsrU5HjJCACixZXvPeRXEgaUmVqKvhyuB9WSZ5E1nw6mu3Us1xpPYYoCmAVoc1EOnOEkxZ9aR4oJkA72Ubk76jXtPNmi5iO4TlJNdwFwEL8lsQ8xUBC1pkIrqQzVR8EuJX%2BflgZbUyvRquY49yC8EQxaGnGo58%2B6tWv97XCs4RmzvcbEwVC4VQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AddSecondLineDetail/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-125" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:28,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;42&quot;,&quot;CommandName&quot;:&quot;RequestClose&quot;,&quot;FailureCallbackId&quot;:&quot;&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[true],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${InventItemIdLookupPurchase_form1982_0}&quot;,&quot;TargetId&quot;:&quot;${InventItemIdLookupPurchase_form1982_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;0&quot;,&quot;ThrottleTimestamp&quot;:0,&quot;ThrottleValue&quot;:0,&quot;Telemetry&quot;:true}],&quot;SequenceNumber&quot;:41},{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;43&quot;,&quot;CommandName&quot;:&quot;SetValue&quot;,&quot;complete&quot;:null,&quot;FailureCallbackId&quot;:&quot;44&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[&quot;${PurchLine_ItemId}&quot;],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${PurchTable_form22_0}&quot;,&quot;TargetId&quot;:&quot;${PurchLine_ItemId479_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;0&quot;,&quot;ThrottleTimestamp&quot;:0,&quot;ThrottleValue&quot;:0,&quot;Telemetry&quot;:true}],&quot;SequenceNumber&quot;:42}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=PurchTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">e997de3f-8a70-49c7-8db5-fc129c7bbc86</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">23d213f8-6c6b-430e-a79d-63160165491e</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#19}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">4bMdRnIC6j4DMjw9za6EIg%3D%3D.bOH%2FvpH%2FpPE%2FPtFlHTnMM2jnrJJo%2FWLMY2ytKB%2F7YTuB9Z9JtuZHLe56B5oZ0ne5BuAtVnhFZimi2PlPimctIIEt83tQnBzIiGRenTX%2BeCMW05LpsQWgqk8yxnUvGqWzBpFWf9PwxYrVSTXhfl9j1BSSNM9pZwCGgsrU5HjJCACixZXvPeRXEgaUmVqKvhyuB9WSZ5E1nw6mu3Us1xpPYYoCmAVoc1EOnOEkxZ9aR4oJkA72Ubk76jXtPNmi5iO4TlJNdwFwEL8lsQ8xUBC1pkIrqQzVR8EuJX%2BflgZbUyvRquY49yC8EQxaGnGo58%2B6tWv97XCs4RmzvcbEwVC4VQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#109" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#109</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#109_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#110" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#110</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#110_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AddSecondLineDetail/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-126" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:29,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;45&quot;,&quot;CommandName&quot;:&quot;RequestPopup&quot;,&quot;FailureCallbackId&quot;:&quot;46&quot;,&quot;NamedParameters&quot;:{&quot;Arg1&quot;:&quot;11&quot;},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[&quot;11&quot;,{&quot;InventoryDimensionsGrid_InventSiteId&quot;:&quot;1&quot;}],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${PurchTable_form22_0}&quot;,&quot;TargetId&quot;:&quot;${InventoryDimensionsGrid_InventSiteId484_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;0&quot;,&quot;ThrottleTimestamp&quot;:0,&quot;ThrottleValue&quot;:0,&quot;Telemetry&quot;:true}],&quot;SequenceNumber&quot;:43}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=PurchTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">7e1d5c5a-eadf-4d50-8c25-1714ad49c2b3</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">23d213f8-6c6b-430e-a79d-63160165491e</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#19}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">4bMdRnIC6j4DMjw9za6EIg%3D%3D.bOH%2FvpH%2FpPE%2FPtFlHTnMM2jnrJJo%2FWLMY2ytKB%2F7YTuB9Z9JtuZHLe56B5oZ0ne5BuAtVnhFZimi2PlPimctIIEt83tQnBzIiGRenTX%2BeCMW05LpsQWgqk8yxnUvGqWzBpFWf9PwxYrVSTXhfl9j1BSSNM9pZwCGgsrU5HjJCACixZXvPeRXEgaUmVqKvhyuB9WSZ5E1nw6mu3Us1xpPYYoCmAVoc1EOnOEkxZ9aR4oJkA72Ubk76jXtPNmi5iO4TlJNdwFwEL8lsQ8xUBC1pkIrqQzVR8EuJX%2BflgZbUyvRquY49yC8EQxaGnGo58%2B6tWv97XCs4RmzvcbEwVC4VQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#111" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#111</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#111_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#112" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#112</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#112_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor_form2014_0" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">_form2014_0</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;_form&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AddSecondLineDetail/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-127" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:30,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;47&quot;,&quot;CommandName&quot;:&quot;RequestClose&quot;,&quot;FailureCallbackId&quot;:&quot;&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[true],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${_form2014_0}&quot;,&quot;TargetId&quot;:&quot;${_form2014_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;0&quot;,&quot;ThrottleTimestamp&quot;:0,&quot;ThrottleValue&quot;:0,&quot;Telemetry&quot;:true}],&quot;SequenceNumber&quot;:44},{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;48&quot;,&quot;CommandName&quot;:&quot;SetValue&quot;,&quot;complete&quot;:null,&quot;FailureCallbackId&quot;:&quot;49&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[&quot;1&quot;],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${PurchTable_form22_0}&quot;,&quot;TargetId&quot;:&quot;${InventoryDimensionsGrid_InventSiteId484_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;0&quot;,&quot;ThrottleTimestamp&quot;:0,&quot;ThrottleValue&quot;:0,&quot;Telemetry&quot;:true}],&quot;SequenceNumber&quot;:45}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=PurchTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">e6b1e2c5-a524-4e73-9b4c-0a3f48235775</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">23d213f8-6c6b-430e-a79d-63160165491e</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#19}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">4bMdRnIC6j4DMjw9za6EIg%3D%3D.bOH%2FvpH%2FpPE%2FPtFlHTnMM2jnrJJo%2FWLMY2ytKB%2F7YTuB9Z9JtuZHLe56B5oZ0ne5BuAtVnhFZimi2PlPimctIIEt83tQnBzIiGRenTX%2BeCMW05LpsQWgqk8yxnUvGqWzBpFWf9PwxYrVSTXhfl9j1BSSNM9pZwCGgsrU5HjJCACixZXvPeRXEgaUmVqKvhyuB9WSZ5E1nw6mu3Us1xpPYYoCmAVoc1EOnOEkxZ9aR4oJkA72Ubk76jXtPNmi5iO4TlJNdwFwEL8lsQ8xUBC1pkIrqQzVR8EuJX%2BflgZbUyvRquY49yC8EQxaGnGo58%2B6tWv97XCs4RmzvcbEwVC4VQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#113" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#113</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#113_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#114" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#114</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#114_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AddSecondLineDetail/Services/TelemetryManager.svc/ProcessEventData-128" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;EventDataInteraction&quot;,&quot;EventData&quot;:[{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:4,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;RequestPopup RequestClose SetValue&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:560,&quot;EventGroupId&quot;:13,&quot;EventTimestamp&quot;:1700842410494},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:5,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;RequestPopup RequestClose SetValue&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:1510,&quot;EventGroupId&quot;:13,&quot;EventTimestamp&quot;:1700842410494},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:6,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;RequestPopup RequestClose SetValue&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:32,&quot;EventGroupId&quot;:13,&quot;EventTimestamp&quot;:1700842410494},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:7,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;BlockingDiv&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:0,&quot;EventGroupId&quot;:13,&quot;EventTimestamp&quot;:1700842410494}]}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/TelemetryManager.svc/ProcessEventData</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=PurchTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">7e1d5c5a-eadf-4d50-8c25-1714ad49c2b3</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">23d213f8-6c6b-430e-a79d-63160165491e</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#19}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">4bMdRnIC6j4DMjw9za6EIg%3D%3D.bOH%2FvpH%2FpPE%2FPtFlHTnMM2jnrJJo%2FWLMY2ytKB%2F7YTuB9Z9JtuZHLe56B5oZ0ne5BuAtVnhFZimi2PlPimctIIEt83tQnBzIiGRenTX%2BeCMW05LpsQWgqk8yxnUvGqWzBpFWf9PwxYrVSTXhfl9j1BSSNM9pZwCGgsrU5HjJCACixZXvPeRXEgaUmVqKvhyuB9WSZ5E1nw6mu3Us1xpPYYoCmAVoc1EOnOEkxZ9aR4oJkA72Ubk76jXtPNmi5iO4TlJNdwFwEL8lsQ8xUBC1pkIrqQzVR8EuJX%2BflgZbUyvRquY49yC8EQxaGnGo58%2B6tWv97XCs4RmzvcbEwVC4VQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AddSecondLineDetail/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-129" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:31,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;50&quot;,&quot;CommandName&quot;:&quot;RequestPopup&quot;,&quot;FailureCallbackId&quot;:&quot;51&quot;,&quot;NamedParameters&quot;:{&quot;Arg1&quot;:&quot;12&quot;},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[&quot;12&quot;,{&quot;InventoryDimensionsGrid_InventLocationId&quot;:&quot;11&quot;}],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${PurchTable_form22_0}&quot;,&quot;TargetId&quot;:&quot;${InventoryDimensionsGrid_InventLocationId485_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;0&quot;,&quot;ThrottleTimestamp&quot;:0,&quot;ThrottleValue&quot;:0,&quot;Telemetry&quot;:true}],&quot;SequenceNumber&quot;:46}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=PurchTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">9c7466f8-4a53-43b8-be57-24a30301b66a</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">23d213f8-6c6b-430e-a79d-63160165491e</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#19}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">4bMdRnIC6j4DMjw9za6EIg%3D%3D.bOH%2FvpH%2FpPE%2FPtFlHTnMM2jnrJJo%2FWLMY2ytKB%2F7YTuB9Z9JtuZHLe56B5oZ0ne5BuAtVnhFZimi2PlPimctIIEt83tQnBzIiGRenTX%2BeCMW05LpsQWgqk8yxnUvGqWzBpFWf9PwxYrVSTXhfl9j1BSSNM9pZwCGgsrU5HjJCACixZXvPeRXEgaUmVqKvhyuB9WSZ5E1nw6mu3Us1xpPYYoCmAVoc1EOnOEkxZ9aR4oJkA72Ubk76jXtPNmi5iO4TlJNdwFwEL8lsQ8xUBC1pkIrqQzVR8EuJX%2BflgZbUyvRquY49yC8EQxaGnGo58%2B6tWv97XCs4RmzvcbEwVC4VQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#117" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#117</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#117_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#118" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#118</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#118_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression ExtractorInventLocationIdLookup_form2028_0" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">InventLocationIdLookup_form2028_0</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;InventLocationIdLookup_form&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AddSecondLineDetail/Services/TelemetryManager.svc/ProcessEventData-130" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;EventDataInteraction&quot;,&quot;EventData&quot;:[{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:4,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;ProcessEventData RequestPopup&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:249,&quot;EventGroupId&quot;:14,&quot;EventTimestamp&quot;:1700842412184},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:5,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;ProcessEventData RequestPopup&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:1316,&quot;EventGroupId&quot;:14,&quot;EventTimestamp&quot;:1700842412184},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:6,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;ProcessEventData RequestPopup&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:126,&quot;EventGroupId&quot;:14,&quot;EventTimestamp&quot;:1700842412184},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:7,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;BlockingDiv&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:0,&quot;EventGroupId&quot;:14,&quot;EventTimestamp&quot;:1700842412184}]}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/TelemetryManager.svc/ProcessEventData</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=PurchTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">7e1d5c5a-eadf-4d50-8c25-1714ad49c2b3</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">23d213f8-6c6b-430e-a79d-63160165491e</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#19}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">4bMdRnIC6j4DMjw9za6EIg%3D%3D.bOH%2FvpH%2FpPE%2FPtFlHTnMM2jnrJJo%2FWLMY2ytKB%2F7YTuB9Z9JtuZHLe56B5oZ0ne5BuAtVnhFZimi2PlPimctIIEt83tQnBzIiGRenTX%2BeCMW05LpsQWgqk8yxnUvGqWzBpFWf9PwxYrVSTXhfl9j1BSSNM9pZwCGgsrU5HjJCACixZXvPeRXEgaUmVqKvhyuB9WSZ5E1nw6mu3Us1xpPYYoCmAVoc1EOnOEkxZ9aR4oJkA72Ubk76jXtPNmi5iO4TlJNdwFwEL8lsQ8xUBC1pkIrqQzVR8EuJX%2BflgZbUyvRquY49yC8EQxaGnGo58%2B6tWv97XCs4RmzvcbEwVC4VQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AddSecondLineDetail/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-131" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:32,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;52&quot;,&quot;CommandName&quot;:&quot;RequestClose&quot;,&quot;FailureCallbackId&quot;:&quot;&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[true],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${InventLocationIdLookup_form2028_0}&quot;,&quot;TargetId&quot;:&quot;${InventLocationIdLookup_form2028_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;0&quot;,&quot;ThrottleTimestamp&quot;:0,&quot;ThrottleValue&quot;:0,&quot;Telemetry&quot;:true}],&quot;SequenceNumber&quot;:47},{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;53&quot;,&quot;CommandName&quot;:&quot;SetValue&quot;,&quot;complete&quot;:null,&quot;FailureCallbackId&quot;:&quot;54&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[&quot;11&quot;],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${PurchTable_form22_0}&quot;,&quot;TargetId&quot;:&quot;${InventoryDimensionsGrid_InventLocationId485_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;0&quot;,&quot;ThrottleTimestamp&quot;:0,&quot;ThrottleValue&quot;:0,&quot;Telemetry&quot;:true}],&quot;SequenceNumber&quot;:48}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=PurchTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">2101b84e-f2e6-4cde-bef3-d89c410af014</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">23d213f8-6c6b-430e-a79d-63160165491e</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#19}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">4bMdRnIC6j4DMjw9za6EIg%3D%3D.bOH%2FvpH%2FpPE%2FPtFlHTnMM2jnrJJo%2FWLMY2ytKB%2F7YTuB9Z9JtuZHLe56B5oZ0ne5BuAtVnhFZimi2PlPimctIIEt83tQnBzIiGRenTX%2BeCMW05LpsQWgqk8yxnUvGqWzBpFWf9PwxYrVSTXhfl9j1BSSNM9pZwCGgsrU5HjJCACixZXvPeRXEgaUmVqKvhyuB9WSZ5E1nw6mu3Us1xpPYYoCmAVoc1EOnOEkxZ9aR4oJkA72Ubk76jXtPNmi5iO4TlJNdwFwEL8lsQ8xUBC1pkIrqQzVR8EuJX%2BflgZbUyvRquY49yC8EQxaGnGo58%2B6tWv97XCs4RmzvcbEwVC4VQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#121" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#121</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#121_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#122" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#122</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#122_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AddSecondLineDetail/Services/TelemetryManager.svc/ProcessEventData-132" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;EventDataInteraction&quot;,&quot;EventData&quot;:[{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:4,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;ProcessEventData RequestClose SetValue&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:0,&quot;EventGroupId&quot;:15,&quot;EventTimestamp&quot;:1700842413357},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:5,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;ProcessEventData RequestClose SetValue&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:1131,&quot;EventGroupId&quot;:15,&quot;EventTimestamp&quot;:1700842413357},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:6,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;ProcessEventData RequestClose SetValue&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:40,&quot;EventGroupId&quot;:15,&quot;EventTimestamp&quot;:1700842413357},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:7,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;BlockingDiv&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:0,&quot;EventGroupId&quot;:15,&quot;EventTimestamp&quot;:1700842413357}]}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/TelemetryManager.svc/ProcessEventData</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=PurchTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">7e1d5c5a-eadf-4d50-8c25-1714ad49c2b3</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">23d213f8-6c6b-430e-a79d-63160165491e</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#19}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">4bMdRnIC6j4DMjw9za6EIg%3D%3D.bOH%2FvpH%2FpPE%2FPtFlHTnMM2jnrJJo%2FWLMY2ytKB%2F7YTuB9Z9JtuZHLe56B5oZ0ne5BuAtVnhFZimi2PlPimctIIEt83tQnBzIiGRenTX%2BeCMW05LpsQWgqk8yxnUvGqWzBpFWf9PwxYrVSTXhfl9j1BSSNM9pZwCGgsrU5HjJCACixZXvPeRXEgaUmVqKvhyuB9WSZ5E1nw6mu3Us1xpPYYoCmAVoc1EOnOEkxZ9aR4oJkA72Ubk76jXtPNmi5iO4TlJNdwFwEL8lsQ8xUBC1pkIrqQzVR8EuJX%2BflgZbUyvRquY49yC8EQxaGnGo58%2B6tWv97XCs4RmzvcbEwVC4VQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AddSecondLineDetail/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-133" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:33,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;55&quot;,&quot;CommandName&quot;:&quot;SetValue&quot;,&quot;complete&quot;:null,&quot;FailureCallbackId&quot;:&quot;56&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[&quot;${PurchQty_item2}&quot;],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${PurchTable_form22_0}&quot;,&quot;TargetId&quot;:&quot;${PurchLine_PurchQtyGrid488_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;0&quot;,&quot;ThrottleTimestamp&quot;:0,&quot;ThrottleValue&quot;:0,&quot;Telemetry&quot;:true}],&quot;SequenceNumber&quot;:49}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=PurchTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">71d28310-fbbc-49e7-b3e2-c861fcdac98f</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">23d213f8-6c6b-430e-a79d-63160165491e</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#19}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">4bMdRnIC6j4DMjw9za6EIg%3D%3D.bOH%2FvpH%2FpPE%2FPtFlHTnMM2jnrJJo%2FWLMY2ytKB%2F7YTuB9Z9JtuZHLe56B5oZ0ne5BuAtVnhFZimi2PlPimctIIEt83tQnBzIiGRenTX%2BeCMW05LpsQWgqk8yxnUvGqWzBpFWf9PwxYrVSTXhfl9j1BSSNM9pZwCGgsrU5HjJCACixZXvPeRXEgaUmVqKvhyuB9WSZ5E1nw6mu3Us1xpPYYoCmAVoc1EOnOEkxZ9aR4oJkA72Ubk76jXtPNmi5iO4TlJNdwFwEL8lsQ8xUBC1pkIrqQzVR8EuJX%2BflgZbUyvRquY49yC8EQxaGnGo58%2B6tWv97XCs4RmzvcbEwVC4VQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#125" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#125</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#125_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#126" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#126</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#126_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="7. Save PO" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SavePO/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-134" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:34,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;&quot;,&quot;CommandName&quot;:&quot;UpdateLastSelectedControl&quot;,&quot;FailureCallbackId&quot;:&quot;&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:true,&quot;PositionalParameters&quot;:[&quot;PurchLine_LineAmountGrid&quot;],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${PurchTable_form22_0}&quot;,&quot;TargetId&quot;:&quot;${PurchTable_form22_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;0&quot;,&quot;ThrottleTimestamp&quot;:0,&quot;ThrottleValue&quot;:0,&quot;Telemetry&quot;:false},{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;&quot;,&quot;CommandName&quot;:&quot;Click&quot;,&quot;FailureCallbackId&quot;:&quot;&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:null,&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${PurchTable_form22_0}&quot;,&quot;ShouldBlockOnExecution&quot;:true,&quot;TargetId&quot;:&quot;${SystemDefinedSaveButton1490_0}&quot;,&quot;Throttle&quot;:true,&quot;ThrottleId&quot;:&quot;${PurchTable_form22_0}_TG&quot;,&quot;ThrottleTimestamp&quot;:0,&quot;ThrottleValue&quot;:0,&quot;Telemetry&quot;:true}],&quot;SequenceNumber&quot;:50}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=PurchTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">b53906f2-5e2a-42a6-b04d-cbb27e405f9f</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">23d213f8-6c6b-430e-a79d-63160165491e</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#19}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">4bMdRnIC6j4DMjw9za6EIg%3D%3D.bOH%2FvpH%2FpPE%2FPtFlHTnMM2jnrJJo%2FWLMY2ytKB%2F7YTuB9Z9JtuZHLe56B5oZ0ne5BuAtVnhFZimi2PlPimctIIEt83tQnBzIiGRenTX%2BeCMW05LpsQWgqk8yxnUvGqWzBpFWf9PwxYrVSTXhfl9j1BSSNM9pZwCGgsrU5HjJCACixZXvPeRXEgaUmVqKvhyuB9WSZ5E1nw6mu3Us1xpPYYoCmAVoc1EOnOEkxZ9aR4oJkA72Ubk76jXtPNmi5iO4TlJNdwFwEL8lsQ8xUBC1pkIrqQzVR8EuJX%2BflgZbUyvRquY49yC8EQxaGnGo58%2B6tWv97XCs4RmzvcbEwVC4VQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#127" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#127</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#127_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#128" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#128</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#128_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Boundary Extractor - PONumber" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">PONumber</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">&quot;PurchId_field&quot;:&quot;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&quot;</stringProp>
                <stringProp name="BoundaryExtractor.default">PO_NOTFOUND</stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              </BoundaryExtractor>
              <hashTree/>
            </hashTree>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="D: Before While Loop" enabled="false">
              <boolProp name="displayJMeterProperties">true</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">true</boolProp>
            </DebugSampler>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="D: After While loop" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SavePO/Services/TelemetryManager.svc/ProcessEventData-135" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;EventDataInteraction&quot;,&quot;EventData&quot;:[{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:4,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;UpdateLastSelectedControl Click&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:16,&quot;EventGroupId&quot;:16,&quot;EventTimestamp&quot;:1700842438738},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:5,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;UpdateLastSelectedControl Click&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:1058,&quot;EventGroupId&quot;:16,&quot;EventTimestamp&quot;:1700842438738},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:6,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;UpdateLastSelectedControl Click&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:104,&quot;EventGroupId&quot;:16,&quot;EventTimestamp&quot;:1700842438738},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:7,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;Click&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:1087,&quot;EventGroupId&quot;:16,&quot;EventTimestamp&quot;:1700842438738}]}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/TelemetryManager.svc/ProcessEventData</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=PurchTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">b53906f2-5e2a-42a6-b04d-cbb27e405f9f</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">23d213f8-6c6b-430e-a79d-63160165491e</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#19}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">4bMdRnIC6j4DMjw9za6EIg%3D%3D.bOH%2FvpH%2FpPE%2FPtFlHTnMM2jnrJJo%2FWLMY2ytKB%2F7YTuB9Z9JtuZHLe56B5oZ0ne5BuAtVnhFZimi2PlPimctIIEt83tQnBzIiGRenTX%2BeCMW05LpsQWgqk8yxnUvGqWzBpFWf9PwxYrVSTXhfl9j1BSSNM9pZwCGgsrU5HjJCACixZXvPeRXEgaUmVqKvhyuB9WSZ5E1nw6mu3Us1xpPYYoCmAVoc1EOnOEkxZ9aR4oJkA72Ubk76jXtPNmi5iO4TlJNdwFwEL8lsQ8xUBC1pkIrqQzVR8EuJX%2BflgZbUyvRquY49yC8EQxaGnGo58%2B6tWv97XCs4RmzvcbEwVC4VQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="8. Submit Workflow" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SubmitWorkflow/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-136" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:35,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;&quot;,&quot;CommandName&quot;:&quot;UpdateLastSelectedControl&quot;,&quot;FailureCallbackId&quot;:&quot;&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:true,&quot;PositionalParameters&quot;:[&quot;PurchLine_LineAmountGrid&quot;],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${PurchTable_form22_0}&quot;,&quot;TargetId&quot;:&quot;${PurchTable_form22_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;0&quot;,&quot;ThrottleTimestamp&quot;:0,&quot;ThrottleValue&quot;:0,&quot;Telemetry&quot;:false},{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;57&quot;,&quot;CommandName&quot;:&quot;RequestPopup&quot;,&quot;FailureCallbackId&quot;:&quot;&quot;,&quot;NamedParameters&quot;:{&quot;Arg1&quot;:&quot;13&quot;},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${PurchTable_form22_0}&quot;,&quot;ShouldBlockOnExecution&quot;:true,&quot;TargetId&quot;:&quot;${PurchTableWorkflowDropDialog438_0}&quot;,&quot;Throttle&quot;:true,&quot;ThrottleId&quot;:&quot;${PurchTable_form22_0}_TG&quot;,&quot;ThrottleTimestamp&quot;:215355,&quot;ThrottleValue&quot;:0,&quot;Telemetry&quot;:true}],&quot;SequenceNumber&quot;:51}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=PurchTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">8fe65514-022d-4ce5-a304-48aa68888de0</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">23d213f8-6c6b-430e-a79d-63160165491e</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#19}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">4bMdRnIC6j4DMjw9za6EIg%3D%3D.bOH%2FvpH%2FpPE%2FPtFlHTnMM2jnrJJo%2FWLMY2ytKB%2F7YTuB9Z9JtuZHLe56B5oZ0ne5BuAtVnhFZimi2PlPimctIIEt83tQnBzIiGRenTX%2BeCMW05LpsQWgqk8yxnUvGqWzBpFWf9PwxYrVSTXhfl9j1BSSNM9pZwCGgsrU5HjJCACixZXvPeRXEgaUmVqKvhyuB9WSZ5E1nw6mu3Us1xpPYYoCmAVoc1EOnOEkxZ9aR4oJkA72Ubk76jXtPNmi5iO4TlJNdwFwEL8lsQ8xUBC1pkIrqQzVR8EuJX%2BflgZbUyvRquY49yC8EQxaGnGo58%2B6tWv97XCs4RmzvcbEwVC4VQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#131" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#131</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#131_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#132" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#132</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#132_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression ExtractorPurchTableWorkflowDropDialog_form2060_0" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">PurchTableWorkflowDropDialog_form2060_0</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;PurchTableWorkflowDropDialog_form&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression ExtractorPromotedAction12074_0" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">PromotedAction12074_0</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;PromotedAction1&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SubmitWorkflow/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-137" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:36,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;&quot;,&quot;CommandName&quot;:&quot;Click&quot;,&quot;FailureCallbackId&quot;:&quot;&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${PurchTableWorkflowDropDialog_form2060_0}&quot;,&quot;ShouldBlockOnExecution&quot;:true,&quot;TargetId&quot;:&quot;${PromotedAction12074_0}&quot;,&quot;Throttle&quot;:true,&quot;ThrottleId&quot;:&quot;${PurchTableWorkflowDropDialog_form2060_0}_TG&quot;,&quot;ThrottleTimestamp&quot;:0,&quot;ThrottleValue&quot;:0,&quot;Telemetry&quot;:true}],&quot;SequenceNumber&quot;:52}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=PurchTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">e8f5f5ea-fb40-4f59-bf19-f4a25c6a0347</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">23d213f8-6c6b-430e-a79d-63160165491e</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#19}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">4bMdRnIC6j4DMjw9za6EIg%3D%3D.bOH%2FvpH%2FpPE%2FPtFlHTnMM2jnrJJo%2FWLMY2ytKB%2F7YTuB9Z9JtuZHLe56B5oZ0ne5BuAtVnhFZimi2PlPimctIIEt83tQnBzIiGRenTX%2BeCMW05LpsQWgqk8yxnUvGqWzBpFWf9PwxYrVSTXhfl9j1BSSNM9pZwCGgsrU5HjJCACixZXvPeRXEgaUmVqKvhyuB9WSZ5E1nw6mu3Us1xpPYYoCmAVoc1EOnOEkxZ9aR4oJkA72Ubk76jXtPNmi5iO4TlJNdwFwEL8lsQ8xUBC1pkIrqQzVR8EuJX%2BflgZbUyvRquY49yC8EQxaGnGo58%2B6tWv97XCs4RmzvcbEwVC4VQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#133" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#133</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#133_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#134" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#134</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#134_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression ExtractorSysOperationSandboxForm_form2076_0" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">SysOperationSandboxForm_form2076_0</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;SysOperationSandboxForm_form&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor__TimerForAsyncTaskPolling2081_0" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">__TimerForAsyncTaskPolling2081_0</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;__TimerForAsyncTaskPolling&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression ExtractorWorkflowSubmitDialog_form2075_0" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">WorkflowSubmitDialog_form2075_0</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;WorkflowSubmitDialog_form&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SubmitWorkflow/Services/TelemetryManager.svc/ProcessEventData-138" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;EventDataInteraction&quot;,&quot;EventData&quot;:[{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:4,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;Click&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:15,&quot;EventGroupId&quot;:17,&quot;EventTimestamp&quot;:1700842458444},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:5,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;Click&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:1062,&quot;EventGroupId&quot;:17,&quot;EventTimestamp&quot;:1700842458444},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:6,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;Click&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:188,&quot;EventGroupId&quot;:17,&quot;EventTimestamp&quot;:1700842458444},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:7,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;Click&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:1249,&quot;EventGroupId&quot;:17,&quot;EventTimestamp&quot;:1700842458444}]}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/TelemetryManager.svc/ProcessEventData</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=PurchTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">e8f5f5ea-fb40-4f59-bf19-f4a25c6a0347</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">23d213f8-6c6b-430e-a79d-63160165491e</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#19}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">4bMdRnIC6j4DMjw9za6EIg%3D%3D.bOH%2FvpH%2FpPE%2FPtFlHTnMM2jnrJJo%2FWLMY2ytKB%2F7YTuB9Z9JtuZHLe56B5oZ0ne5BuAtVnhFZimi2PlPimctIIEt83tQnBzIiGRenTX%2BeCMW05LpsQWgqk8yxnUvGqWzBpFWf9PwxYrVSTXhfl9j1BSSNM9pZwCGgsrU5HjJCACixZXvPeRXEgaUmVqKvhyuB9WSZ5E1nw6mu3Us1xpPYYoCmAVoc1EOnOEkxZ9aR4oJkA72Ubk76jXtPNmi5iO4TlJNdwFwEL8lsQ8xUBC1pkIrqQzVR8EuJX%2BflgZbUyvRquY49yC8EQxaGnGo58%2B6tWv97XCs4RmzvcbEwVC4VQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SubmitWorkflow/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-139" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:37,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;58&quot;,&quot;CommandName&quot;:&quot;Elapsed&quot;,&quot;FailureCallbackId&quot;:&quot;&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${SysOperationSandboxForm_form2076_0}&quot;,&quot;TargetId&quot;:&quot;${__TimerForAsyncTaskPolling2081_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;0&quot;,&quot;ThrottleTimestamp&quot;:0,&quot;ThrottleValue&quot;:0,&quot;Telemetry&quot;:false}],&quot;SequenceNumber&quot;:53}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=PurchTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">3d0bfe5f-5710-495d-ba78-181ee7e14f14</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">23d213f8-6c6b-430e-a79d-63160165491e</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#19}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">4bMdRnIC6j4DMjw9za6EIg%3D%3D.bOH%2FvpH%2FpPE%2FPtFlHTnMM2jnrJJo%2FWLMY2ytKB%2F7YTuB9Z9JtuZHLe56B5oZ0ne5BuAtVnhFZimi2PlPimctIIEt83tQnBzIiGRenTX%2BeCMW05LpsQWgqk8yxnUvGqWzBpFWf9PwxYrVSTXhfl9j1BSSNM9pZwCGgsrU5HjJCACixZXvPeRXEgaUmVqKvhyuB9WSZ5E1nw6mu3Us1xpPYYoCmAVoc1EOnOEkxZ9aR4oJkA72Ubk76jXtPNmi5iO4TlJNdwFwEL8lsQ8xUBC1pkIrqQzVR8EuJX%2BflgZbUyvRquY49yC8EQxaGnGo58%2B6tWv97XCs4RmzvcbEwVC4VQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#137" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#137</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#137_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#138" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#138</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#138_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression ExtractorComment2089_0" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">Comment2089_0</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;Comment&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression ExtractorSubmit2090_0" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">Submit2090_0</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;Submit&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NOTFOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SubmitWorkflow/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-140" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:38,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;59&quot;,&quot;CommandName&quot;:&quot;RequestClose&quot;,&quot;FailureCallbackId&quot;:&quot;&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[null,true],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${PurchTableWorkflowDropDialog_form2060_0}&quot;,&quot;ShouldBlockOnExecution&quot;:true,&quot;TargetId&quot;:&quot;${PurchTableWorkflowDropDialog_form2060_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;0&quot;,&quot;ThrottleTimestamp&quot;:0,&quot;ThrottleValue&quot;:0,&quot;Telemetry&quot;:true}],&quot;SequenceNumber&quot;:54}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=PurchTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">f91dd68e-8986-4c94-b012-902a0b81115e</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">23d213f8-6c6b-430e-a79d-63160165491e</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#19}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">4bMdRnIC6j4DMjw9za6EIg%3D%3D.bOH%2FvpH%2FpPE%2FPtFlHTnMM2jnrJJo%2FWLMY2ytKB%2F7YTuB9Z9JtuZHLe56B5oZ0ne5BuAtVnhFZimi2PlPimctIIEt83tQnBzIiGRenTX%2BeCMW05LpsQWgqk8yxnUvGqWzBpFWf9PwxYrVSTXhfl9j1BSSNM9pZwCGgsrU5HjJCACixZXvPeRXEgaUmVqKvhyuB9WSZ5E1nw6mu3Us1xpPYYoCmAVoc1EOnOEkxZ9aR4oJkA72Ubk76jXtPNmi5iO4TlJNdwFwEL8lsQ8xUBC1pkIrqQzVR8EuJX%2BflgZbUyvRquY49yC8EQxaGnGo58%2B6tWv97XCs4RmzvcbEwVC4VQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#139" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#139</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#139_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#140" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#140</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#140_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SubmitWorkflow/Services/TelemetryManager.svc/ProcessEventData-141" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;EventDataInteraction&quot;,&quot;EventData&quot;:[{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:4,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;Elapsed RequestClose&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:181,&quot;EventGroupId&quot;:18,&quot;EventTimestamp&quot;:1700842464723},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:5,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;Elapsed RequestClose&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:1221,&quot;EventGroupId&quot;:18,&quot;EventTimestamp&quot;:1700842464723},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:6,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;Elapsed RequestClose&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:15,&quot;EventGroupId&quot;:18,&quot;EventTimestamp&quot;:1700842464723},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:7,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;RequestClose&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:644,&quot;EventGroupId&quot;:18,&quot;EventTimestamp&quot;:1700842464723}]}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/TelemetryManager.svc/ProcessEventData</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=PurchTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">3d0bfe5f-5710-495d-ba78-181ee7e14f14</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">23d213f8-6c6b-430e-a79d-63160165491e</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#19}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">4bMdRnIC6j4DMjw9za6EIg%3D%3D.bOH%2FvpH%2FpPE%2FPtFlHTnMM2jnrJJo%2FWLMY2ytKB%2F7YTuB9Z9JtuZHLe56B5oZ0ne5BuAtVnhFZimi2PlPimctIIEt83tQnBzIiGRenTX%2BeCMW05LpsQWgqk8yxnUvGqWzBpFWf9PwxYrVSTXhfl9j1BSSNM9pZwCGgsrU5HjJCACixZXvPeRXEgaUmVqKvhyuB9WSZ5E1nw6mu3Us1xpPYYoCmAVoc1EOnOEkxZ9aR4oJkA72Ubk76jXtPNmi5iO4TlJNdwFwEL8lsQ8xUBC1pkIrqQzVR8EuJX%2BflgZbUyvRquY49yC8EQxaGnGo58%2B6tWv97XCs4RmzvcbEwVC4VQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SubmitWorkflow/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;-142" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ChannelId&quot;:0,&quot;CompanyId&quot;:&quot;USMF&quot;,&quot;Language&quot;:&quot;en-us&quot;,&quot;LastAcknowledgedSequenceNumber&quot;:39,&quot;Messages&quot;:[{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;60&quot;,&quot;CommandName&quot;:&quot;SetValue&quot;,&quot;complete&quot;:null,&quot;FailureCallbackId&quot;:&quot;61&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:[&quot;Please approve my PO&quot;],&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${WorkflowSubmitDialog_form2075_0}&quot;,&quot;TargetId&quot;:&quot;${Comment2089_0}&quot;,&quot;Throttle&quot;:false,&quot;ThrottleId&quot;:&quot;0&quot;,&quot;ThrottleTimestamp&quot;:0,&quot;ThrottleValue&quot;:0,&quot;Telemetry&quot;:true}],&quot;SequenceNumber&quot;:55},{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;CommandInteraction&quot;,&quot;CallbackId&quot;:&quot;&quot;,&quot;CommandName&quot;:&quot;Click&quot;,&quot;FailureCallbackId&quot;:&quot;&quot;,&quot;NamedParameters&quot;:{},&quot;NoAsyncIncrement&quot;:false,&quot;PositionalParameters&quot;:null,&quot;PriorityPosition&quot;:false,&quot;ResetThrottleTime&quot;:false,&quot;RootId&quot;:&quot;${WorkflowSubmitDialog_form2075_0}&quot;,&quot;ShouldBlockOnExecution&quot;:true,&quot;TargetId&quot;:&quot;${Submit2090_0}&quot;,&quot;Throttle&quot;:true,&quot;ThrottleId&quot;:&quot;${WorkflowSubmitDialog_form2075_0}_TG&quot;,&quot;ThrottleTimestamp&quot;:0,&quot;ThrottleValue&quot;:0,&quot;Telemetry&quot;:true}],&quot;SequenceNumber&quot;:56}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/ReliableCommunicationManager.svc/ProcessMessages?cmp=USMF&amp;lng=en-us&amp;</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=PurchTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">f652c604-a3f8-4a14-a85a-f8d91d5317aa</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">23d213f8-6c6b-430e-a79d-63160165491e</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#19}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">4bMdRnIC6j4DMjw9za6EIg%3D%3D.bOH%2FvpH%2FpPE%2FPtFlHTnMM2jnrJJo%2FWLMY2ytKB%2F7YTuB9Z9JtuZHLe56B5oZ0ne5BuAtVnhFZimi2PlPimctIIEt83tQnBzIiGRenTX%2BeCMW05LpsQWgqk8yxnUvGqWzBpFWf9PwxYrVSTXhfl9j1BSSNM9pZwCGgsrU5HjJCACixZXvPeRXEgaUmVqKvhyuB9WSZ5E1nw6mu3Us1xpPYYoCmAVoc1EOnOEkxZ9aR4oJkA72Ubk76jXtPNmi5iO4TlJNdwFwEL8lsQ8xUBC1pkIrqQzVR8EuJX%2BflgZbUyvRquY49yC8EQxaGnGo58%2B6tWv97XCs4RmzvcbEwVC4VQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#143" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#143</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#143_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Sid#144" enabled="true">
                <stringProp name="RegexExtractor.refname">Sid#144</stringProp>
                <stringProp name="RegexExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Sid#144_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Boundary Extractor - PONumber" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">PONumber</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">&quot;PurchId_field&quot;:&quot;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&quot;</stringProp>
                <stringProp name="BoundaryExtractor.default">PO_NOTFOUND2</stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              </BoundaryExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SubmitWorkflow/Services/TelemetryManager.svc/ProcessEventData-143" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;Interactions&quot;:[{&quot;$type&quot;:&quot;EventDataInteraction&quot;,&quot;EventData&quot;:[{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:4,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;SetValue Click&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:114,&quot;EventGroupId&quot;:19,&quot;EventTimestamp&quot;:1700842477633},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:5,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;SetValue Click&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:717,&quot;EventGroupId&quot;:19,&quot;EventTimestamp&quot;:1700842477633},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:6,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;SetValue Click&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:180,&quot;EventGroupId&quot;:19,&quot;EventTimestamp&quot;:1700842477633},{&quot;$type&quot;:&quot;PerformanceEventData&quot;,&quot;PerformanceEvent&quot;:7,&quot;FormName&quot;:&quot;&quot;,&quot;FormUniqueId&quot;:&quot;&quot;,&quot;TargetName&quot;:&quot;Click&quot;,&quot;TargetType&quot;:&quot;&quot;,&quot;Duration&quot;:901,&quot;EventGroupId&quot;:19,&quot;EventTimestamp&quot;:1700842477633}]}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/TelemetryManager.svc/ProcessEventData</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=PurchTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-aid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-aid</stringProp>
                    <stringProp name="Header.value">f652c604-a3f8-4a14-a85a-f8d91d5317aa</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-bsid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-bsid</stringProp>
                    <stringProp name="Header.value">23d213f8-6c6b-430e-a79d-63160165491e</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-sid" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-sid</stringProp>
                    <stringProp name="Header.value">${Sid#19}</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="ms-dyn-csrftoken" elementType="Header">
                    <stringProp name="Header.name">ms-dyn-csrftoken</stringProp>
                    <stringProp name="Header.value">4bMdRnIC6j4DMjw9za6EIg%3D%3D.bOH%2FvpH%2FpPE%2FPtFlHTnMM2jnrJJo%2FWLMY2ytKB%2F7YTuB9Z9JtuZHLe56B5oZ0ne5BuAtVnhFZimi2PlPimctIIEt83tQnBzIiGRenTX%2BeCMW05LpsQWgqk8yxnUvGqWzBpFWf9PwxYrVSTXhfl9j1BSSNM9pZwCGgsrU5HjJCACixZXvPeRXEgaUmVqKvhyuB9WSZ5E1nw6mu3Us1xpPYYoCmAVoc1EOnOEkxZ9aR4oJkA72Ubk76jXtPNmi5iO4TlJNdwFwEL8lsQ8xUBC1pkIrqQzVR8EuJX%2BflgZbUyvRquY49yC8EQxaGnGo58%2B6tWv97XCs4RmzvcbEwVC4VQ%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="9. Sign Out" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SignOut/Logout-145" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/Logout</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=PurchTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SignOut/Services/SessionManager.svc/EndSessions-144" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">[&quot;${Sid#19}&quot;]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/Services/SessionManager.svc/EndSessions</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/?cmp=USMF&amp;mi=PurchTableListPage</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SignOut/${tenant}/oauth2/logout-147" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="post_logout_redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">post_logout_redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://${host}/?cmp=USMF&amp;mi=PurchTableListPage</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/${tenant}/oauth2/logout</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Hpgid" enabled="true">
                <stringProp name="RegexExtractor.refname">Hpgid</stringProp>
                <stringProp name="RegexExtractor.regex">,&quot;hpgid&quot;:(.+?),&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Hpgid_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Hpgact" enabled="true">
                <stringProp name="RegexExtractor.refname">Hpgact</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;hpgact&quot;:(.+?),&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Hpgact_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Hpgrequestid" enabled="true">
                <stringProp name="RegexExtractor.refname">Hpgrequestid</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;sessionId&quot;:&quot;(.+?)&quot;,</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Hpgrequestid_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - ApiCanary" enabled="true">
                <stringProp name="RegexExtractor.refname">ApiCanary</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;apiCanary&quot;:&quot;(.+?)&quot;,</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">ApiCanary_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Canary" enabled="true">
                <stringProp name="RegexExtractor.refname">Canary</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;canary&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Canary_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SignOut/-150" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="cmp" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">cmp</stringProp>
                    <stringProp name="Argument.value">USMF</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="mi" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">mi</stringProp>
                    <stringProp name="Argument.value">PurchTableListPage</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - state1" enabled="true">
                <stringProp name="RegexExtractor.refname">state1</stringProp>
                <stringProp name="RegexExtractor.regex">&amp;state=([^&amp;]+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">state1_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - nonce" enabled="true">
                <stringProp name="RegexExtractor.refname">nonce</stringProp>
                <stringProp name="RegexExtractor.regex">nonce=([A-Za-z0-9-.]+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">nonce_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SignOut/${tenant}/oauth2/authorize-152" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="client_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_id</stringProp>
                    <stringProp name="Argument.value">00000015-0000-0000-c000-000000000000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="response_mode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_mode</stringProp>
                    <stringProp name="Argument.value">form_post</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="response_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">response_type</stringProp>
                    <stringProp name="Argument.value">code id_token</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="scope" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">scope</stringProp>
                    <stringProp name="Argument.value">openid profile</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="state" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">state</stringProp>
                    <stringProp name="Argument.value">${__urldecode(${state1})}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="nonce" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">nonce</stringProp>
                    <stringProp name="Argument.value">${nonce}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://${host}/</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="max_age" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">max_age</stringProp>
                    <stringProp name="Argument.value">86400</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/${tenant}/oauth2/authorize</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">false</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <boolProp name="HTTPSampler.md5">false</boolProp>
              <intProp name="HTTPSampler.ipSourceType">0</intProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Hpgid" enabled="true">
                <stringProp name="RegexExtractor.refname">Hpgid</stringProp>
                <stringProp name="RegexExtractor.regex">,&quot;hpgid&quot;:(.+?),&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Hpgid_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Hpgact" enabled="true">
                <stringProp name="RegexExtractor.refname">Hpgact</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;hpgact&quot;:(.+?),&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Hpgact_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Client-request-id" enabled="true">
                <stringProp name="RegexExtractor.refname">Client-request-id</stringProp>
                <stringProp name="RegexExtractor.regex">client-request-id=(.+?)&quot;,</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Client-request-id_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Hpgrequestid" enabled="true">
                <stringProp name="RegexExtractor.refname">Hpgrequestid</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;sessionId&quot;:&quot;(.+?)&quot;,</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Hpgrequestid_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - ApiCanary" enabled="true">
                <stringProp name="RegexExtractor.refname">ApiCanary</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;apiCanary&quot;:&quot;(.+?)&quot;,</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">ApiCanary_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Canary" enabled="true">
                <stringProp name="RegexExtractor.refname">Canary</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;canary&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Canary_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - Ctx" enabled="true">
                <stringProp name="RegexExtractor.refname">Ctx</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;sCtx&quot;:&quot;(.+?)&quot;,</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">Ctx_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - SFT" enabled="true">
                <stringProp name="RegexExtractor.refname">SFT</stringProp>
                <stringProp name="RegexExtractor.regex">,&quot;sFT&quot;:&quot;(.+?)&quot;,&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">SFT_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RegExp - SFT1" enabled="true">
                <stringProp name="RegexExtractor.refname">SFT1</stringProp>
                <stringProp name="RegexExtractor.regex">,&quot;FlowToken&quot;:&quot;(.+?)&quot;,</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="RegexExtractor.default">SFT1_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">C:\apache-jmeter\bin\FnO_JMeter_Template\CreatePOAndSubmitWorkFlow_SUM_RUN.xml</stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>true</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>true</responseData>
            <samplerData>true</samplerData>
            <xml>true</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>true</responseHeaders>
            <requestHeaders>true</requestHeaders>
            <responseDataOnError>true</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <fileName>true</fileName>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">C:\apache-jmeter\bin\FnO_JMeter_Template\CreatePOAndSubmitWorkFlow_RUN.xml</stringProp>
      </ResultCollector>
      <hashTree/>
      <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="false">
        <boolProp name="displayJMeterProperties">false</boolProp>
        <boolProp name="displayJMeterVariables">true</boolProp>
        <boolProp name="displaySamplerProperties">true</boolProp>
        <boolProp name="displaySystemProperties">false</boolProp>
      </DebugPostProcessor>
      <hashTree/>
      <com.blazemeter.jmeter.correlation.CorrelationProxyControl guiclass="com.blazemeter.jmeter.correlation.CorrelationProxyControlGui" testclass="com.blazemeter.jmeter.correlation.CorrelationProxyControl" testname="bzm - Correlation Recorder" enabled="false">
        <stringProp name="ProxyControlGui.port">8877</stringProp>
        <collectionProp name="ProxyControlGui.exclude_list">
          <stringProp name="-42651529">.*(?!(\.json))(\.js)(.*|$)</stringProp>
          <stringProp name="-1813442068">.*\.(bmp|css|gif|ico|jpe?g|png|swf|eot|otf|ttf|mp4|woff|woff2|svg)(\?.*|$)</stringProp>
          <stringProp name="-557882246">.*\.(yahoo|mozilla|firefox|msn|nel|google|googleapis|gstatic|gvt1|gvt2|clarity|windows|bing|yimg|ytimg|ggpht|youtube|doubleclick|googleusercontent|chrome|microsoft|live|nelreports|azureedge|digicert|browser-intake-datadoghq|icloud)\..*</stringProp>
          <stringProp name="805311387">windowsupdate\.microsoft\.com.*</stringProp>
          <stringProp name="1179605444">(?i).*\.(bmp|css|js|gif|ico|jpe?g|png|swf|eot|otf|ttf|mp4|woff|woff2)</stringProp>
          <stringProp name="110431874">.*msg\.yahoo\.com.*</stringProp>
          <stringProp name="-88591710">www\.download\.windowsupdate\.com.*</stringProp>
          <stringProp name="1323576868">toolbarqueries\.google\..*</stringProp>
          <stringProp name="1739087931">http?://self-repair\.mozilla\.org.*</stringProp>
          <stringProp name="1206954446">tiles.*\.mozilla\.com.*</stringProp>
          <stringProp name="-1424663473">.*detectportal\.firefox\.com.*</stringProp>
          <stringProp name="1779943373">us\.update\.toolbar\.yahoo\.com.*</stringProp>
          <stringProp name="-190610036">.*\.google\.com.*/safebrowsing/.*</stringProp>
          <stringProp name="-1899150273">api\.bing\.com.*</stringProp>
          <stringProp name="-958112859">toolbar\.google\.com.*</stringProp>
          <stringProp name="-192420923">.*yimg\.com.*</stringProp>
          <stringProp name="-576820688">toolbar\.msn\.com.*</stringProp>
          <stringProp name="305776760">(?i).*\.(bmp|css|js|gif|ico|jpe?g|png|swf|eot|otf|ttf|mp4|woff|woff2)[\?;].*</stringProp>
          <stringProp name="-1435252351">toolbar\.avg\.com/.*</stringProp>
          <stringProp name="2118375536">www\.google-analytics\.com.*</stringProp>
          <stringProp name="-1279148329">pgq\.yahoo\.com.*</stringProp>
          <stringProp name="1815174768">safebrowsing.*\.google\.com.*</stringProp>
          <stringProp name="-1314416226">sqm\.microsoft\.com.*</stringProp>
          <stringProp name="587935979">g\.msn.*</stringProp>
          <stringProp name="1629558731">clients.*\.google.*</stringProp>
          <stringProp name="11072252">.*toolbar\.yahoo\.com.*</stringProp>
          <stringProp name="1726898318">geo\.yahoo\.com.*</stringProp>
        </collectionProp>
        <collectionProp name="ProxyControlGui.include_list"/>
        <boolProp name="ProxyControlGui.capture_http_headers">true</boolProp>
        <intProp name="ProxyControlGui.grouping_mode">0</intProp>
        <boolProp name="ProxyControlGui.add_assertion">false</boolProp>
        <stringProp name="ProxyControlGui.sampler_type_name">Java</stringProp>
        <boolProp name="ProxyControlGui.sampler_redirect_automatically">false</boolProp>
        <boolProp name="ProxyControlGui.sampler_follow_redirects">false</boolProp>
        <boolProp name="ProxyControlGui.use_keepalive">true</boolProp>
        <boolProp name="ProxyControlGui.sampler_download_images">false</boolProp>
        <intProp name="ProxyControlGui.proxy_http_sampler_naming_mode">0</intProp>
        <stringProp name="ProxyControlGui.proxy_prefix_http_sampler_name">SignOut</stringProp>
        <stringProp name="ProxyControlGui.proxy_pause_http_sampler"></stringProp>
        <boolProp name="ProxyControlGui.notify_child_sl_filtered">false</boolProp>
        <boolProp name="ProxyControlGui.regex_match">true</boolProp>
        <stringProp name="ProxyControlGui.content_type_include"></stringProp>
        <stringProp name="ProxyControlGui.content_type_exclude"></stringProp>
        <boolProp name="ProxyControlGui.detect_graphql_request">true</boolProp>
        <stringProp name="ProxyControlGui.default_encoding">UTF-8</stringProp>
        <stringProp name="CorrelationProxyControl.components">com.blazemeter.jmeter.correlation.siebel.SiebelRowIdCorrelationReplacement,com.blazemeter.jmeter.correlation.siebel.SiebelCounterCorrelationReplacement,com.blazemeter.jmeter.correlation.siebel.SiebelRowCorrelationExtractor,com.blazemeter.jmeter.correlation.siebel.SiebelRowParamsCorrelationReplacement</stringProp>
        <collectionProp name="CorrelationProxyControl.groups">
          <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.RulesGroupTestElement" enabled="true">
            <stringProp name="CorrelationProxyControl.RulesGroup.id">Group-1</stringProp>
            <elementProp name="CorrelationProxyControl.RulesGroup.rules" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRulesTestElement">
              <collectionProp name="CorrelationRules.rules">
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="true">
                  <stringProp name="CorrelationRule.referenceName">state1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">RESPONSE_HEADERS</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">&amp;state=([^&amp;]+)</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">false</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">state=([A-Za-z=&amp;${}.%0-9_-]+)</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString">${__urldecode(${state1})}</stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">true</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="true">
                  <stringProp name="CorrelationRule.referenceName">nonce</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">RESPONSE_HEADERS</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">nonce=([A-Za-z0-9-.]+)</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">false</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">nonce=([A-Za-z0-9-.]+)</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString"></stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="true">
                  <stringProp name="CorrelationRule.referenceName">Hpgid</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">BODY</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">,&quot;hpgid&quot;:(.+?),&quot;</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">false</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">hpgid=(.+?)&amp;</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString"></stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="true">
                  <stringProp name="CorrelationRule.referenceName">Hpgid</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">BODY</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">,&quot;hpgid&quot;:(.+?),&quot;</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">false</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">hpgid: ([0-9]{4})</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString"></stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="true">
                  <stringProp name="CorrelationRule.referenceName">Hpgact</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">BODY</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">&quot;hpgact&quot;:(.+?),&quot;</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">false</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">hpgact=(.+?)&amp;</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString"></stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="true">
                  <stringProp name="CorrelationRule.referenceName">Hpgact</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">BODY</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">&quot;hpgact&quot;:(.+?),&quot;</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">false</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">hpgact: ([0-9]{4})</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString"></stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="true">
                  <stringProp name="CorrelationRule.referenceName">Client-request-id</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">BODY</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">client-request-id=(.+?)&quot;,</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">false</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">client-request-id=(.+?)&amp;</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString"></stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="true">
                  <stringProp name="CorrelationRule.referenceName">Client-request-id</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">BODY</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">client-request-id=(.+?)&quot;,</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">false</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">client-request-id: ([^\s]+)</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString"></stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="true">
                  <stringProp name="CorrelationRule.referenceName">Hpgrequestid</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">BODY</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">&quot;sessionId&quot;:&quot;(.+?)&quot;,</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">false</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">hpgrequestid=(.{36})</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString"></stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="true">
                  <stringProp name="CorrelationRule.referenceName">ApiCanary</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">BODY</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">&quot;apiCanary&quot;:&quot;(.+?)&quot;,</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">false</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">canary: ([^\s]+)</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString"></stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="true">
                  <stringProp name="CorrelationRule.referenceName">Canary</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">BODY</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">&quot;canary&quot;:&quot;(.+?)&quot;},</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">false</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">canary=([^&amp;]+)</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString"></stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="true">
                  <stringProp name="CorrelationRule.referenceName">Ctx</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">BODY</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">&quot;sCtx&quot;:&quot;(.+?)&quot;,</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">false</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">&quot;originalRequest&quot;:&quot;(.+?)&quot;,&quot;</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString"></stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="true">
                  <stringProp name="CorrelationRule.referenceName">Ctx</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">BODY</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">&quot;sCtx&quot;:&quot;(.+?)&quot;,</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">false</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">ctx=([^&amp;]+)</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString"></stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="true">
                  <stringProp name="CorrelationRule.referenceName">SFT</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">BODY</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">,&quot;sFT&quot;:&quot;(.+?)&quot;,&quot;</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">false</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">&quot;flowToken&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString"></stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="true">
                  <stringProp name="CorrelationRule.referenceName">SFT</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">BODY</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">,&quot;sFT&quot;:&quot;(.+?)&quot;,&quot;</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">false</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">flowToken=([^&amp;]+)</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString"></stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="true">
                  <stringProp name="CorrelationRule.referenceName">code</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">BODY</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">name=&quot;code&quot; value=&quot;(.+?)&quot;</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">false</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">code=([^&amp;]+)</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString"></stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="true">
                  <stringProp name="CorrelationRule.referenceName">Idtoken</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">BODY</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">&quot;id_token&quot; value=&quot;(.+?)&quot;</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">false</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">id_token=([A-Za-z0-9.\s-_]+)</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString"></stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="true">
                  <stringProp name="CorrelationRule.referenceName">SessionState</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">BODY</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">name=&quot;session_state&quot; value=&quot;(.+?)&quot;</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">false</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">session_state=([A-Za-z${}()_0-9-]+)</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString">${SessionState}</stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">true</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="true">
                  <stringProp name="CorrelationRule.referenceName">SFT1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">BODY</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">,&quot;FlowToken&quot;:&quot;(.+?)&quot;,</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">false</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">flowToken=([^&amp;]+)</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString"></stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="true">
                  <stringProp name="CorrelationRule.referenceName">Token</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">BODY</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">&quot;wresult&quot; value=&quot;(.+?)&quot;</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">false</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">wresult=([^&amp;]+)</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString">${__unescapeHtml(${Token})}</stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="true">
                  <stringProp name="CorrelationRule.referenceName">Sid</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">RESPONSE_HEADERS</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">true</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">ms-dyn-sid: (.+)</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString"></stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="true">
                  <stringProp name="CorrelationRule.referenceName">Sid</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">RESPONSE_HEADERS</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">ms-dyn-sid: (.+)</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">true</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">&quot;(.+?)&quot;</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString"></stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="false">
                  <stringProp name="CorrelationRule.referenceName">Id</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">BODY</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">{&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">-1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">true</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">&quot;RootId&quot;:&quot;([0-9]+_[0-9]+)&quot;</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString"></stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="false">
                  <stringProp name="CorrelationRule.referenceName">Id</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">BODY</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">{&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">-1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">true</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">&quot;TargetId&quot;:&quot;([0-9]+_[0-9]+)&quot;</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString"></stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="false">
                  <stringProp name="CorrelationRule.referenceName">Id</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">BODY</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">{&quot;Id&quot;:&quot;([0-9]+_[0-9]+)&quot;,&quot;Name&quot;:&quot;</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">-1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">true</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">&quot;ThrottleId&quot;:&quot;([0-9]+_[0-9]+)_TG&quot;</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString"></stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="true">
                  <stringProp name="CorrelationRule.referenceName">Hpgrequestid</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">BODY</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">&quot;sessionId&quot;:&quot;(.+?)&quot;,</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">false</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">hpgrequestid: (.{36})</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString"></stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="false">
                  <stringProp name="CorrelationRule.referenceName">Wa</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">BODY</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">wa=(.+?)&amp;amp</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">false</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">wa=([^&amp;]+)</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString"></stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="false">
                  <stringProp name="CorrelationRule.referenceName">Wtrealm</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">BODY</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">wtrealm=(.+?)&amp;amp</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">false</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">wtrealm=([^&amp;]+)</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString">${__urldecode(${Wtrealm})}</stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="false">
                  <stringProp name="CorrelationRule.referenceName">Wctx</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">BODY</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">wctx=(.+?)&amp;amp</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">false</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">wctx=([^&amp;]+)</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString">${__urldecode(${Wctx})}</stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="false">
                  <stringProp name="CorrelationRule.referenceName">Wct</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">BODY</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">wct=(.+?)&amp;amp</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">false</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">wct=([^&amp;]+)</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString">${__urldecode(${Wct})}</stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="false">
                  <stringProp name="CorrelationRule.referenceName">Wreply</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">BODY</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">wreply=(.+?)&quot;&gt;</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">false</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">wreply=(.+)</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString">${__urldecode(${Wreply})}</stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="false">
                  <stringProp name="CorrelationRule.referenceName">DashboardID</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">BODY</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">&quot;Id&quot;\:&quot;([0-9A-F_]{2,})&quot;,&quot;Name&quot;:&quot;DefaultDashboard_form&quot;</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">false</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">&quot;RootId&quot;:&quot;(.+?)&quot;,&quot;T</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString"></stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="false">
                  <stringProp name="CorrelationRule.referenceName">TimesyncID</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">BODY</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">&quot;Id&quot;\:&quot;([0-9A-F_]{2,})&quot;,&quot;Name&quot;:&quot;__TimerForAsyncTaskPolling&quot;</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">false</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">&quot;TargetId&quot;:&quot;(.+?)&quot;,&quot;Th</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString"></stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="false">
                  <stringProp name="CorrelationRule.referenceName">refVar27</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">BODY</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">param=&quot;(.+?)&quot;</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">false</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">param=&quot;(.+?)&quot;</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString"></stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
                <elementProp name="" elementType="com.blazemeter.jmeter.correlation.gui.CorrelationRuleTestElement" enabled="false">
                  <stringProp name="CorrelationRule.referenceName">refVar28</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.target">BODY</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractorClass">com.blazemeter.jmeter.correlation.core.extractors.RegexCorrelationExtractor</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.regex">param=&quot;(.+?)&quot;</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.matchNr">1</stringProp>
                  <stringProp name="CorrelationRule.CorrelationExtractor.groupNr">1</stringProp>
                  <boolProp name="CorrelationRule.CorrelationExtractor.multiValued">false</boolProp>
                  <stringProp name="CorrelationRule.CorrelationReplacementClass">com.blazemeter.jmeter.correlation.core.replacements.RegexCorrelationReplacement</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.regex">param=&quot;(.+?)&quot;</stringProp>
                  <stringProp name="CorrelationRule.CorrelationReplacement.replacementString"></stringProp>
                  <boolProp name="CorrelationRule.CorrelationReplacement.ignoreValue">false</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </elementProp>
        </collectionProp>
        <stringProp name="CorrelationProxyControl.responseFilter"></stringProp>
        <stringProp name="CorrelationProxyControl.correlationHistoryPath"></stringProp>
        <stringProp name="CorrelationProxyControl.correlationHistoryId">1723269282975</stringProp>
      </com.blazemeter.jmeter.correlation.CorrelationProxyControl>
      <hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>true</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">C:\apache-jmeter\bin\Recording\recording-1700842204349.jtl</stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
