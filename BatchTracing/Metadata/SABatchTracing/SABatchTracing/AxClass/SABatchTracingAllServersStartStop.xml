<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SABatchTracingAllServersStartStop</Name>
	<SourceCode>
		<Declaration><![CDATA[
///
///  This source code is freeware and is provided on an "as is" basis without warranties of any kind,
///  whether express or implied, including without limitation warranties that the code is free of defect,
///  fit for a particular purpose or non-infringing.  The entire risk as to the quality and performance of
///  the code is with the end user.
///
/// <summary>
///     The <c>SABatchTracingAllServersStartStop</c> class is used to create a prompt to confirm is the user wants to start batch tracing on all servers.
/// </summary>
public class SABatchTracingAllServersStartStop 
{
    FormRun             callerForm;
    FormDataSource      batchTracingTableFormDataSource;
    SABatchTracingStatus startStopAction;
    SABatchTracingTable batchTracingTable = SABatchTracingTable::findByServerId('AllServers');

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    /// Change status of server records in table SABatchTracingStatus to start and stop tracing
    /// </summary>
    public void run()
    {

        switch (startStopAction)
        {
            case SABatchTracingStatus::StartRequested:
                if(batchTracingTable.Status == SABatchTracingStatus::Stopped)
                {
                    SABatchTracingTable::updateStatus('AllServers', SABatchTracingStatus::StartRequested);
                }
                break;
            case SABatchTracingStatus::StopRequested:
                if(batchTracingTable.Status == SABatchTracingStatus::Started || batchTracingTable.Status == SABatchTracingStatus::StartedPartially)
                {
                    SABatchTracingTable::updateStatus('AllServers', SABatchTracingStatus::StopRequested);
                }
                break;
        }

        this.researchDataSource(tablenum(SABatchTracingTable));

    }

]]></Source>
			</Method>
			<Method>
				<Name>researchDataSource</Name>
				<Source><![CDATA[
    private void researchDataSource(TableId _tableId)
    {
        FormDataSource formDataSource = callerForm.dataSource(tableid2name(_tableId));
        if (formDataSource)
        {
            formDataSource.research(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args args)
    {
        SABatchTracingAllServersStartStop batchTracingStartStopAllServers = new SABatchTracingAllServersStartStop();
        str menuItemName = args.menuItemName();

        if (SABatchTracingTable::findByServerId('AllServers').Status == SABatchTracingStatus::NotReady)
        {
            // Batch Job has not been started, tracing cannot be started or stopped. 
            Box::warning("@SABatchTracing:StartStopWarning");
        }
        else
        {
            switch (menuItemName)
            {
                case 'SABatchTracingStartAll':
                    batchTracingStartStopAllServers.startStopAction = SABatchTracingStatus::StartRequested;
                    break;
                case 'SABatchTracingStopAll':
                    batchTracingStartStopAllServers.startStopAction = SABatchTracingStatus::StopRequested;
                    break;
            }

            if (batchTracingStartStopAllServers.startStopAction == SABatchTracingStatus::StartRequested && 
                batchTracingStartStopAllServers.batchTracingTable.Status != SABatchTracingStatus::Stopped)
            {
                Box::info("@SABatchTracing:StartWarning");
            }
            else if (batchTracingStartStopAllServers.startStopAction == SABatchTracingStatus::StopRequested &&
                     batchTracingStartStopAllServers.batchTracingTable.Status != SABatchTracingStatus::Started &&
                     batchTracingStartStopAllServers.batchTracingTable.Status != SABatchTracingStatus::StartedPartially)
            {
                Box::info("@SABatchTracing:StopWarning");
            }
            else if (Box::yesNo(strFmt("@SABatchTracing:StartStopDialogAll",batchTracingStartStopAllServers.startStopAction == SABatchTracingStatus::StartRequested ? "@SABatchTracing:Start" : "@SABatchTracing:Stop"), DialogButton::No) == DialogButton::Yes)
            {
                using (SysErrorMessageHelpScope scope = SysErrorMessageHelpScope::newErrorContext(args))
                {
                    batchTracingStartStopAllServers.batchTracingTableFormDataSource = FormDataUtil::getFormDataSource(args.record());
                    batchTracingStartStopAllServers.callerForm = args.caller() as FormRun;
                    batchTracingStartStopAllServers.run();
                }
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>