<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SABatchTracingBatchStart</Name>
	<SourceCode>
		<Declaration><![CDATA[
///
///  This source code is freeware and is provided on an "as is" basis without warranties of any kind,
///  whether express or implied, including without limitation warranties that the code is free of defect,
///  fit for a particular purpose or non-infringing.  The entire risk as to the quality and performance of
///  the code is with the end user.
///
/// <summary>
///     The <c>SABatchTracing</c> Schedules the Batch Tracing job
/// </summary>
public class SABatchTracingBatchStart 
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        BatchHeader batchHeader;
        batchHeader = BatchHeader::construct();
        batchHeader.parmCaption("@SABatchTracing:BatchJobDescription");

        SABatchTracingController batchTracingController = new SABatchTracingController();
        batchHeader.addTask(batchTracingController);
        if(SABatchTracingParameters::findOrCreate().SchedulingPriorityIsOverridden == NoYes::Yes)
        {
            batchHeader.parmBatchJobPriorityIsOverridden(NoYes::Yes);
            batchHeader.parmBatchJobPriority(SABatchTracingParameters::findOrCreate().SchedulingPriority);
        }
        else
        {
            batchHeader.parmBatchJobPriorityIsOverridden(NoYes::No);
            batchHeader.parmBatchJobPriority(BatchSchedulingPriority::Normal);
        }
        batchHeader.save();

        info(strFmt("@SABatchTracing:BatchJobScheduled",batchHeader.parmBatchHeaderId()));

    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>